// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./apiClient";
export * from "./apiExtension";
export * from "./cartDiscount";
export * from "./channel";
export * from "./customObject";
export * from "./discountCode";
export * from "./productType";
export * from "./projectSettings";
export * from "./provider";
export * from "./shippingMethod";
export * from "./shippingZone";
export * from "./shippingZoneRate";
export * from "./state";
export * from "./store";
export * from "./subscription";
export * from "./taxCategory";
export * from "./taxCategoryRate";
export * from "./type";

// Export sub-modules:
import * as config from "./config";
import * as types from "./types";

export {
    config,
    types,
};

// Import resources to register:
import { ApiClient } from "./apiClient";
import { ApiExtension } from "./apiExtension";
import { CartDiscount } from "./cartDiscount";
import { Channel } from "./channel";
import { CustomObject } from "./customObject";
import { DiscountCode } from "./discountCode";
import { ProductType } from "./productType";
import { ProjectSettings } from "./projectSettings";
import { ShippingMethod } from "./shippingMethod";
import { ShippingZone } from "./shippingZone";
import { ShippingZoneRate } from "./shippingZoneRate";
import { State } from "./state";
import { Store } from "./store";
import { Subscription } from "./subscription";
import { TaxCategory } from "./taxCategory";
import { TaxCategoryRate } from "./taxCategoryRate";
import { Type } from "./type";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "commercetools:index/apiClient:ApiClient":
                return new ApiClient(name, <any>undefined, { urn })
            case "commercetools:index/apiExtension:ApiExtension":
                return new ApiExtension(name, <any>undefined, { urn })
            case "commercetools:index/cartDiscount:CartDiscount":
                return new CartDiscount(name, <any>undefined, { urn })
            case "commercetools:index/channel:Channel":
                return new Channel(name, <any>undefined, { urn })
            case "commercetools:index/customObject:CustomObject":
                return new CustomObject(name, <any>undefined, { urn })
            case "commercetools:index/discountCode:DiscountCode":
                return new DiscountCode(name, <any>undefined, { urn })
            case "commercetools:index/productType:ProductType":
                return new ProductType(name, <any>undefined, { urn })
            case "commercetools:index/projectSettings:ProjectSettings":
                return new ProjectSettings(name, <any>undefined, { urn })
            case "commercetools:index/shippingMethod:ShippingMethod":
                return new ShippingMethod(name, <any>undefined, { urn })
            case "commercetools:index/shippingZone:ShippingZone":
                return new ShippingZone(name, <any>undefined, { urn })
            case "commercetools:index/shippingZoneRate:ShippingZoneRate":
                return new ShippingZoneRate(name, <any>undefined, { urn })
            case "commercetools:index/state:State":
                return new State(name, <any>undefined, { urn })
            case "commercetools:index/store:Store":
                return new Store(name, <any>undefined, { urn })
            case "commercetools:index/subscription:Subscription":
                return new Subscription(name, <any>undefined, { urn })
            case "commercetools:index/taxCategory:TaxCategory":
                return new TaxCategory(name, <any>undefined, { urn })
            case "commercetools:index/taxCategoryRate:TaxCategoryRate":
                return new TaxCategoryRate(name, <any>undefined, { urn })
            case "commercetools:index/type:Type":
                return new Type(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("commercetools", "index/apiClient", _module)
pulumi.runtime.registerResourceModule("commercetools", "index/apiExtension", _module)
pulumi.runtime.registerResourceModule("commercetools", "index/cartDiscount", _module)
pulumi.runtime.registerResourceModule("commercetools", "index/channel", _module)
pulumi.runtime.registerResourceModule("commercetools", "index/customObject", _module)
pulumi.runtime.registerResourceModule("commercetools", "index/discountCode", _module)
pulumi.runtime.registerResourceModule("commercetools", "index/productType", _module)
pulumi.runtime.registerResourceModule("commercetools", "index/projectSettings", _module)
pulumi.runtime.registerResourceModule("commercetools", "index/shippingMethod", _module)
pulumi.runtime.registerResourceModule("commercetools", "index/shippingZone", _module)
pulumi.runtime.registerResourceModule("commercetools", "index/shippingZoneRate", _module)
pulumi.runtime.registerResourceModule("commercetools", "index/state", _module)
pulumi.runtime.registerResourceModule("commercetools", "index/store", _module)
pulumi.runtime.registerResourceModule("commercetools", "index/subscription", _module)
pulumi.runtime.registerResourceModule("commercetools", "index/taxCategory", _module)
pulumi.runtime.registerResourceModule("commercetools", "index/taxCategoryRate", _module)
pulumi.runtime.registerResourceModule("commercetools", "index/type", _module)

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("commercetools", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:commercetools") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
