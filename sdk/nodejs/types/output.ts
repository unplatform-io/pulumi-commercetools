// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export interface ApiExtensionDestination {
    accessKey?: string;
    accessSecret?: string;
    arn?: string;
    authorizationHeader?: string;
    azureAuthentication?: string;
    type: string;
    url?: string;
}

export interface ApiExtensionTrigger {
    actions: string[];
    resourceTypeId: string;
}

export interface CartDiscountTarget {
    predicate?: string;
    type: string;
}

export interface CartDiscountValue {
    distributionChannelId?: string;
    monies?: outputs.CartDiscountValueMoney[];
    permyriad?: number;
    productId?: string;
    supplyChannelId?: string;
    type: string;
    variant?: number;
}

export interface CartDiscountValueMoney {
    centAmount: number;
    currencyCode: string;
}

export interface ProductTypeAttribute {
    constraint?: string;
    inputHint?: string;
    inputTip?: {[key: string]: any};
    label: {[key: string]: any};
    name: string;
    required?: boolean;
    searchable?: boolean;
    type: outputs.ProductTypeAttributeType;
}

export interface ProductTypeAttributeType {
    ElementType2?: outputs.ProductTypeAttributeTypeElementType2;
    localizedValues?: outputs.ProductTypeAttributeTypeLocalizedValue[];
    name: string;
    referenceTypeId?: string;
    typeReference?: string;
    values?: {[key: string]: any};
}

export interface ProductTypeAttributeTypeElementType2 {
    localizedValues?: outputs.ProductTypeAttributeTypeElementType2LocalizedValue[];
    name: string;
    referenceTypeId?: string;
    typeReference?: string;
    values?: {[key: string]: any};
}

export interface ProductTypeAttributeTypeElementType2LocalizedValue {
    key: string;
    label: {[key: string]: any};
}

export interface ProductTypeAttributeTypeLocalizedValue {
    key: string;
    label: {[key: string]: any};
}

export interface ProjectSettingsCarts {
    countryTaxRateFallbackEnabled: boolean;
    deleteDaysAfterLastModification?: number;
}

export interface ProjectSettingsExternalOauth {
    authorizationHeader: string;
    url: string;
}

export interface ProjectSettingsMessages {
    enabled: boolean;
}

export interface ProjectSettingsShippingRateCartClassificationValue {
    key: string;
    label?: {[key: string]: any};
}

export interface ShippingZoneLocation {
    country: string;
    state?: string;
}

export interface ShippingZoneRateFreeAbove {
    centAmount: number;
    currencyCode: string;
}

export interface ShippingZoneRatePrice {
    centAmount: number;
    currencyCode: string;
}

export interface ShippingZoneRateShippingRatePriceTier {
    minimumCentAmount?: number;
    price: outputs.ShippingZoneRateShippingRatePriceTierPrice;
    score?: number;
    type: string;
    value?: string;
}

export interface ShippingZoneRateShippingRatePriceTierPrice {
    centAmount: number;
    currencyCode: string;
}

export interface SubscriptionChange {
    resourceTypeIds?: string[];
}

export interface SubscriptionDestination {
    accessKey?: string;
    accessSecret?: string;
    connectionString?: string;
    projectId?: string;
    queueUrl?: string;
    region: string;
    topic?: string;
    topicArn?: string;
    type: string;
    uri: string;
}

export interface SubscriptionFormat {
    cloudEventsVersion?: string;
    type: string;
}

export interface SubscriptionMessage {
    resourceTypeId?: string;
    types?: string[];
}

export interface TaxCategoryRateSubRate {
    amount: number;
    name: string;
}

export interface TypeField {
    inputHint?: string;
    label: {[key: string]: any};
    name: string;
    required?: boolean;
    type: outputs.TypeFieldType;
}

export interface TypeFieldType {
    ElementType2?: outputs.TypeFieldTypeElementType2;
    localizedValues?: outputs.TypeFieldTypeLocalizedValue[];
    name: string;
    referenceTypeId?: string;
    values?: {[key: string]: any};
}

export interface TypeFieldTypeElementType2 {
    localizedValues?: outputs.TypeFieldTypeElementType2LocalizedValue[];
    name: string;
    referenceTypeId?: string;
    values?: {[key: string]: any};
}

export interface TypeFieldTypeElementType2LocalizedValue {
    key: string;
    label: {[key: string]: any};
}

export interface TypeFieldTypeLocalizedValue {
    key: string;
    label: {[key: string]: any};
}
