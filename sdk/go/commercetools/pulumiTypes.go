// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package commercetools

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ApiExtensionDestination struct {
	AccessKey           *string `pulumi:"accessKey"`
	AccessSecret        *string `pulumi:"accessSecret"`
	Arn                 *string `pulumi:"arn"`
	AuthorizationHeader *string `pulumi:"authorizationHeader"`
	AzureAuthentication *string `pulumi:"azureAuthentication"`
	Type                string  `pulumi:"type"`
	Url                 *string `pulumi:"url"`
}

// ApiExtensionDestinationInput is an input type that accepts ApiExtensionDestinationArgs and ApiExtensionDestinationOutput values.
// You can construct a concrete instance of `ApiExtensionDestinationInput` via:
//
//          ApiExtensionDestinationArgs{...}
type ApiExtensionDestinationInput interface {
	pulumi.Input

	ToApiExtensionDestinationOutput() ApiExtensionDestinationOutput
	ToApiExtensionDestinationOutputWithContext(context.Context) ApiExtensionDestinationOutput
}

type ApiExtensionDestinationArgs struct {
	AccessKey           pulumi.StringPtrInput `pulumi:"accessKey"`
	AccessSecret        pulumi.StringPtrInput `pulumi:"accessSecret"`
	Arn                 pulumi.StringPtrInput `pulumi:"arn"`
	AuthorizationHeader pulumi.StringPtrInput `pulumi:"authorizationHeader"`
	AzureAuthentication pulumi.StringPtrInput `pulumi:"azureAuthentication"`
	Type                pulumi.StringInput    `pulumi:"type"`
	Url                 pulumi.StringPtrInput `pulumi:"url"`
}

func (ApiExtensionDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiExtensionDestination)(nil)).Elem()
}

func (i ApiExtensionDestinationArgs) ToApiExtensionDestinationOutput() ApiExtensionDestinationOutput {
	return i.ToApiExtensionDestinationOutputWithContext(context.Background())
}

func (i ApiExtensionDestinationArgs) ToApiExtensionDestinationOutputWithContext(ctx context.Context) ApiExtensionDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiExtensionDestinationOutput)
}

func (i ApiExtensionDestinationArgs) ToApiExtensionDestinationPtrOutput() ApiExtensionDestinationPtrOutput {
	return i.ToApiExtensionDestinationPtrOutputWithContext(context.Background())
}

func (i ApiExtensionDestinationArgs) ToApiExtensionDestinationPtrOutputWithContext(ctx context.Context) ApiExtensionDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiExtensionDestinationOutput).ToApiExtensionDestinationPtrOutputWithContext(ctx)
}

// ApiExtensionDestinationPtrInput is an input type that accepts ApiExtensionDestinationArgs, ApiExtensionDestinationPtr and ApiExtensionDestinationPtrOutput values.
// You can construct a concrete instance of `ApiExtensionDestinationPtrInput` via:
//
//          ApiExtensionDestinationArgs{...}
//
//  or:
//
//          nil
type ApiExtensionDestinationPtrInput interface {
	pulumi.Input

	ToApiExtensionDestinationPtrOutput() ApiExtensionDestinationPtrOutput
	ToApiExtensionDestinationPtrOutputWithContext(context.Context) ApiExtensionDestinationPtrOutput
}

type apiExtensionDestinationPtrType ApiExtensionDestinationArgs

func ApiExtensionDestinationPtr(v *ApiExtensionDestinationArgs) ApiExtensionDestinationPtrInput {
	return (*apiExtensionDestinationPtrType)(v)
}

func (*apiExtensionDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiExtensionDestination)(nil)).Elem()
}

func (i *apiExtensionDestinationPtrType) ToApiExtensionDestinationPtrOutput() ApiExtensionDestinationPtrOutput {
	return i.ToApiExtensionDestinationPtrOutputWithContext(context.Background())
}

func (i *apiExtensionDestinationPtrType) ToApiExtensionDestinationPtrOutputWithContext(ctx context.Context) ApiExtensionDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiExtensionDestinationPtrOutput)
}

type ApiExtensionDestinationOutput struct{ *pulumi.OutputState }

func (ApiExtensionDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiExtensionDestination)(nil)).Elem()
}

func (o ApiExtensionDestinationOutput) ToApiExtensionDestinationOutput() ApiExtensionDestinationOutput {
	return o
}

func (o ApiExtensionDestinationOutput) ToApiExtensionDestinationOutputWithContext(ctx context.Context) ApiExtensionDestinationOutput {
	return o
}

func (o ApiExtensionDestinationOutput) ToApiExtensionDestinationPtrOutput() ApiExtensionDestinationPtrOutput {
	return o.ToApiExtensionDestinationPtrOutputWithContext(context.Background())
}

func (o ApiExtensionDestinationOutput) ToApiExtensionDestinationPtrOutputWithContext(ctx context.Context) ApiExtensionDestinationPtrOutput {
	return o.ApplyT(func(v ApiExtensionDestination) *ApiExtensionDestination {
		return &v
	}).(ApiExtensionDestinationPtrOutput)
}
func (o ApiExtensionDestinationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiExtensionDestination) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o ApiExtensionDestinationOutput) AccessSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiExtensionDestination) *string { return v.AccessSecret }).(pulumi.StringPtrOutput)
}

func (o ApiExtensionDestinationOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiExtensionDestination) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o ApiExtensionDestinationOutput) AuthorizationHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiExtensionDestination) *string { return v.AuthorizationHeader }).(pulumi.StringPtrOutput)
}

func (o ApiExtensionDestinationOutput) AzureAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiExtensionDestination) *string { return v.AzureAuthentication }).(pulumi.StringPtrOutput)
}

func (o ApiExtensionDestinationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiExtensionDestination) string { return v.Type }).(pulumi.StringOutput)
}

func (o ApiExtensionDestinationOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiExtensionDestination) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ApiExtensionDestinationPtrOutput struct{ *pulumi.OutputState }

func (ApiExtensionDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiExtensionDestination)(nil)).Elem()
}

func (o ApiExtensionDestinationPtrOutput) ToApiExtensionDestinationPtrOutput() ApiExtensionDestinationPtrOutput {
	return o
}

func (o ApiExtensionDestinationPtrOutput) ToApiExtensionDestinationPtrOutputWithContext(ctx context.Context) ApiExtensionDestinationPtrOutput {
	return o
}

func (o ApiExtensionDestinationPtrOutput) Elem() ApiExtensionDestinationOutput {
	return o.ApplyT(func(v *ApiExtensionDestination) ApiExtensionDestination { return *v }).(ApiExtensionDestinationOutput)
}

func (o ApiExtensionDestinationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiExtensionDestination) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o ApiExtensionDestinationPtrOutput) AccessSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiExtensionDestination) *string {
		if v == nil {
			return nil
		}
		return v.AccessSecret
	}).(pulumi.StringPtrOutput)
}

func (o ApiExtensionDestinationPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiExtensionDestination) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

func (o ApiExtensionDestinationPtrOutput) AuthorizationHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiExtensionDestination) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationHeader
	}).(pulumi.StringPtrOutput)
}

func (o ApiExtensionDestinationPtrOutput) AzureAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiExtensionDestination) *string {
		if v == nil {
			return nil
		}
		return v.AzureAuthentication
	}).(pulumi.StringPtrOutput)
}

func (o ApiExtensionDestinationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiExtensionDestination) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o ApiExtensionDestinationPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiExtensionDestination) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type ApiExtensionTrigger struct {
	Actions        []string `pulumi:"actions"`
	ResourceTypeId string   `pulumi:"resourceTypeId"`
}

// ApiExtensionTriggerInput is an input type that accepts ApiExtensionTriggerArgs and ApiExtensionTriggerOutput values.
// You can construct a concrete instance of `ApiExtensionTriggerInput` via:
//
//          ApiExtensionTriggerArgs{...}
type ApiExtensionTriggerInput interface {
	pulumi.Input

	ToApiExtensionTriggerOutput() ApiExtensionTriggerOutput
	ToApiExtensionTriggerOutputWithContext(context.Context) ApiExtensionTriggerOutput
}

type ApiExtensionTriggerArgs struct {
	Actions        pulumi.StringArrayInput `pulumi:"actions"`
	ResourceTypeId pulumi.StringInput      `pulumi:"resourceTypeId"`
}

func (ApiExtensionTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiExtensionTrigger)(nil)).Elem()
}

func (i ApiExtensionTriggerArgs) ToApiExtensionTriggerOutput() ApiExtensionTriggerOutput {
	return i.ToApiExtensionTriggerOutputWithContext(context.Background())
}

func (i ApiExtensionTriggerArgs) ToApiExtensionTriggerOutputWithContext(ctx context.Context) ApiExtensionTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiExtensionTriggerOutput)
}

// ApiExtensionTriggerArrayInput is an input type that accepts ApiExtensionTriggerArray and ApiExtensionTriggerArrayOutput values.
// You can construct a concrete instance of `ApiExtensionTriggerArrayInput` via:
//
//          ApiExtensionTriggerArray{ ApiExtensionTriggerArgs{...} }
type ApiExtensionTriggerArrayInput interface {
	pulumi.Input

	ToApiExtensionTriggerArrayOutput() ApiExtensionTriggerArrayOutput
	ToApiExtensionTriggerArrayOutputWithContext(context.Context) ApiExtensionTriggerArrayOutput
}

type ApiExtensionTriggerArray []ApiExtensionTriggerInput

func (ApiExtensionTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiExtensionTrigger)(nil)).Elem()
}

func (i ApiExtensionTriggerArray) ToApiExtensionTriggerArrayOutput() ApiExtensionTriggerArrayOutput {
	return i.ToApiExtensionTriggerArrayOutputWithContext(context.Background())
}

func (i ApiExtensionTriggerArray) ToApiExtensionTriggerArrayOutputWithContext(ctx context.Context) ApiExtensionTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiExtensionTriggerArrayOutput)
}

type ApiExtensionTriggerOutput struct{ *pulumi.OutputState }

func (ApiExtensionTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiExtensionTrigger)(nil)).Elem()
}

func (o ApiExtensionTriggerOutput) ToApiExtensionTriggerOutput() ApiExtensionTriggerOutput {
	return o
}

func (o ApiExtensionTriggerOutput) ToApiExtensionTriggerOutputWithContext(ctx context.Context) ApiExtensionTriggerOutput {
	return o
}

func (o ApiExtensionTriggerOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiExtensionTrigger) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

func (o ApiExtensionTriggerOutput) ResourceTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v ApiExtensionTrigger) string { return v.ResourceTypeId }).(pulumi.StringOutput)
}

type ApiExtensionTriggerArrayOutput struct{ *pulumi.OutputState }

func (ApiExtensionTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiExtensionTrigger)(nil)).Elem()
}

func (o ApiExtensionTriggerArrayOutput) ToApiExtensionTriggerArrayOutput() ApiExtensionTriggerArrayOutput {
	return o
}

func (o ApiExtensionTriggerArrayOutput) ToApiExtensionTriggerArrayOutputWithContext(ctx context.Context) ApiExtensionTriggerArrayOutput {
	return o
}

func (o ApiExtensionTriggerArrayOutput) Index(i pulumi.IntInput) ApiExtensionTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiExtensionTrigger {
		return vs[0].([]ApiExtensionTrigger)[vs[1].(int)]
	}).(ApiExtensionTriggerOutput)
}

type CartDiscountTarget struct {
	Predicate *string `pulumi:"predicate"`
	Type      string  `pulumi:"type"`
}

// CartDiscountTargetInput is an input type that accepts CartDiscountTargetArgs and CartDiscountTargetOutput values.
// You can construct a concrete instance of `CartDiscountTargetInput` via:
//
//          CartDiscountTargetArgs{...}
type CartDiscountTargetInput interface {
	pulumi.Input

	ToCartDiscountTargetOutput() CartDiscountTargetOutput
	ToCartDiscountTargetOutputWithContext(context.Context) CartDiscountTargetOutput
}

type CartDiscountTargetArgs struct {
	Predicate pulumi.StringPtrInput `pulumi:"predicate"`
	Type      pulumi.StringInput    `pulumi:"type"`
}

func (CartDiscountTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CartDiscountTarget)(nil)).Elem()
}

func (i CartDiscountTargetArgs) ToCartDiscountTargetOutput() CartDiscountTargetOutput {
	return i.ToCartDiscountTargetOutputWithContext(context.Background())
}

func (i CartDiscountTargetArgs) ToCartDiscountTargetOutputWithContext(ctx context.Context) CartDiscountTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CartDiscountTargetOutput)
}

func (i CartDiscountTargetArgs) ToCartDiscountTargetPtrOutput() CartDiscountTargetPtrOutput {
	return i.ToCartDiscountTargetPtrOutputWithContext(context.Background())
}

func (i CartDiscountTargetArgs) ToCartDiscountTargetPtrOutputWithContext(ctx context.Context) CartDiscountTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CartDiscountTargetOutput).ToCartDiscountTargetPtrOutputWithContext(ctx)
}

// CartDiscountTargetPtrInput is an input type that accepts CartDiscountTargetArgs, CartDiscountTargetPtr and CartDiscountTargetPtrOutput values.
// You can construct a concrete instance of `CartDiscountTargetPtrInput` via:
//
//          CartDiscountTargetArgs{...}
//
//  or:
//
//          nil
type CartDiscountTargetPtrInput interface {
	pulumi.Input

	ToCartDiscountTargetPtrOutput() CartDiscountTargetPtrOutput
	ToCartDiscountTargetPtrOutputWithContext(context.Context) CartDiscountTargetPtrOutput
}

type cartDiscountTargetPtrType CartDiscountTargetArgs

func CartDiscountTargetPtr(v *CartDiscountTargetArgs) CartDiscountTargetPtrInput {
	return (*cartDiscountTargetPtrType)(v)
}

func (*cartDiscountTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CartDiscountTarget)(nil)).Elem()
}

func (i *cartDiscountTargetPtrType) ToCartDiscountTargetPtrOutput() CartDiscountTargetPtrOutput {
	return i.ToCartDiscountTargetPtrOutputWithContext(context.Background())
}

func (i *cartDiscountTargetPtrType) ToCartDiscountTargetPtrOutputWithContext(ctx context.Context) CartDiscountTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CartDiscountTargetPtrOutput)
}

type CartDiscountTargetOutput struct{ *pulumi.OutputState }

func (CartDiscountTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CartDiscountTarget)(nil)).Elem()
}

func (o CartDiscountTargetOutput) ToCartDiscountTargetOutput() CartDiscountTargetOutput {
	return o
}

func (o CartDiscountTargetOutput) ToCartDiscountTargetOutputWithContext(ctx context.Context) CartDiscountTargetOutput {
	return o
}

func (o CartDiscountTargetOutput) ToCartDiscountTargetPtrOutput() CartDiscountTargetPtrOutput {
	return o.ToCartDiscountTargetPtrOutputWithContext(context.Background())
}

func (o CartDiscountTargetOutput) ToCartDiscountTargetPtrOutputWithContext(ctx context.Context) CartDiscountTargetPtrOutput {
	return o.ApplyT(func(v CartDiscountTarget) *CartDiscountTarget {
		return &v
	}).(CartDiscountTargetPtrOutput)
}
func (o CartDiscountTargetOutput) Predicate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CartDiscountTarget) *string { return v.Predicate }).(pulumi.StringPtrOutput)
}

func (o CartDiscountTargetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CartDiscountTarget) string { return v.Type }).(pulumi.StringOutput)
}

type CartDiscountTargetPtrOutput struct{ *pulumi.OutputState }

func (CartDiscountTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CartDiscountTarget)(nil)).Elem()
}

func (o CartDiscountTargetPtrOutput) ToCartDiscountTargetPtrOutput() CartDiscountTargetPtrOutput {
	return o
}

func (o CartDiscountTargetPtrOutput) ToCartDiscountTargetPtrOutputWithContext(ctx context.Context) CartDiscountTargetPtrOutput {
	return o
}

func (o CartDiscountTargetPtrOutput) Elem() CartDiscountTargetOutput {
	return o.ApplyT(func(v *CartDiscountTarget) CartDiscountTarget { return *v }).(CartDiscountTargetOutput)
}

func (o CartDiscountTargetPtrOutput) Predicate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CartDiscountTarget) *string {
		if v == nil {
			return nil
		}
		return v.Predicate
	}).(pulumi.StringPtrOutput)
}

func (o CartDiscountTargetPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CartDiscountTarget) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type CartDiscountValue struct {
	DistributionChannelId *string                  `pulumi:"distributionChannelId"`
	Monies                []CartDiscountValueMoney `pulumi:"monies"`
	Permyriad             *int                     `pulumi:"permyriad"`
	ProductId             *string                  `pulumi:"productId"`
	SupplyChannelId       *string                  `pulumi:"supplyChannelId"`
	Type                  string                   `pulumi:"type"`
	Variant               *int                     `pulumi:"variant"`
}

// CartDiscountValueInput is an input type that accepts CartDiscountValueArgs and CartDiscountValueOutput values.
// You can construct a concrete instance of `CartDiscountValueInput` via:
//
//          CartDiscountValueArgs{...}
type CartDiscountValueInput interface {
	pulumi.Input

	ToCartDiscountValueOutput() CartDiscountValueOutput
	ToCartDiscountValueOutputWithContext(context.Context) CartDiscountValueOutput
}

type CartDiscountValueArgs struct {
	DistributionChannelId pulumi.StringPtrInput            `pulumi:"distributionChannelId"`
	Monies                CartDiscountValueMoneyArrayInput `pulumi:"monies"`
	Permyriad             pulumi.IntPtrInput               `pulumi:"permyriad"`
	ProductId             pulumi.StringPtrInput            `pulumi:"productId"`
	SupplyChannelId       pulumi.StringPtrInput            `pulumi:"supplyChannelId"`
	Type                  pulumi.StringInput               `pulumi:"type"`
	Variant               pulumi.IntPtrInput               `pulumi:"variant"`
}

func (CartDiscountValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CartDiscountValue)(nil)).Elem()
}

func (i CartDiscountValueArgs) ToCartDiscountValueOutput() CartDiscountValueOutput {
	return i.ToCartDiscountValueOutputWithContext(context.Background())
}

func (i CartDiscountValueArgs) ToCartDiscountValueOutputWithContext(ctx context.Context) CartDiscountValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CartDiscountValueOutput)
}

func (i CartDiscountValueArgs) ToCartDiscountValuePtrOutput() CartDiscountValuePtrOutput {
	return i.ToCartDiscountValuePtrOutputWithContext(context.Background())
}

func (i CartDiscountValueArgs) ToCartDiscountValuePtrOutputWithContext(ctx context.Context) CartDiscountValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CartDiscountValueOutput).ToCartDiscountValuePtrOutputWithContext(ctx)
}

// CartDiscountValuePtrInput is an input type that accepts CartDiscountValueArgs, CartDiscountValuePtr and CartDiscountValuePtrOutput values.
// You can construct a concrete instance of `CartDiscountValuePtrInput` via:
//
//          CartDiscountValueArgs{...}
//
//  or:
//
//          nil
type CartDiscountValuePtrInput interface {
	pulumi.Input

	ToCartDiscountValuePtrOutput() CartDiscountValuePtrOutput
	ToCartDiscountValuePtrOutputWithContext(context.Context) CartDiscountValuePtrOutput
}

type cartDiscountValuePtrType CartDiscountValueArgs

func CartDiscountValuePtr(v *CartDiscountValueArgs) CartDiscountValuePtrInput {
	return (*cartDiscountValuePtrType)(v)
}

func (*cartDiscountValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CartDiscountValue)(nil)).Elem()
}

func (i *cartDiscountValuePtrType) ToCartDiscountValuePtrOutput() CartDiscountValuePtrOutput {
	return i.ToCartDiscountValuePtrOutputWithContext(context.Background())
}

func (i *cartDiscountValuePtrType) ToCartDiscountValuePtrOutputWithContext(ctx context.Context) CartDiscountValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CartDiscountValuePtrOutput)
}

type CartDiscountValueOutput struct{ *pulumi.OutputState }

func (CartDiscountValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CartDiscountValue)(nil)).Elem()
}

func (o CartDiscountValueOutput) ToCartDiscountValueOutput() CartDiscountValueOutput {
	return o
}

func (o CartDiscountValueOutput) ToCartDiscountValueOutputWithContext(ctx context.Context) CartDiscountValueOutput {
	return o
}

func (o CartDiscountValueOutput) ToCartDiscountValuePtrOutput() CartDiscountValuePtrOutput {
	return o.ToCartDiscountValuePtrOutputWithContext(context.Background())
}

func (o CartDiscountValueOutput) ToCartDiscountValuePtrOutputWithContext(ctx context.Context) CartDiscountValuePtrOutput {
	return o.ApplyT(func(v CartDiscountValue) *CartDiscountValue {
		return &v
	}).(CartDiscountValuePtrOutput)
}
func (o CartDiscountValueOutput) DistributionChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CartDiscountValue) *string { return v.DistributionChannelId }).(pulumi.StringPtrOutput)
}

func (o CartDiscountValueOutput) Monies() CartDiscountValueMoneyArrayOutput {
	return o.ApplyT(func(v CartDiscountValue) []CartDiscountValueMoney { return v.Monies }).(CartDiscountValueMoneyArrayOutput)
}

func (o CartDiscountValueOutput) Permyriad() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CartDiscountValue) *int { return v.Permyriad }).(pulumi.IntPtrOutput)
}

func (o CartDiscountValueOutput) ProductId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CartDiscountValue) *string { return v.ProductId }).(pulumi.StringPtrOutput)
}

func (o CartDiscountValueOutput) SupplyChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CartDiscountValue) *string { return v.SupplyChannelId }).(pulumi.StringPtrOutput)
}

func (o CartDiscountValueOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CartDiscountValue) string { return v.Type }).(pulumi.StringOutput)
}

func (o CartDiscountValueOutput) Variant() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CartDiscountValue) *int { return v.Variant }).(pulumi.IntPtrOutput)
}

type CartDiscountValuePtrOutput struct{ *pulumi.OutputState }

func (CartDiscountValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CartDiscountValue)(nil)).Elem()
}

func (o CartDiscountValuePtrOutput) ToCartDiscountValuePtrOutput() CartDiscountValuePtrOutput {
	return o
}

func (o CartDiscountValuePtrOutput) ToCartDiscountValuePtrOutputWithContext(ctx context.Context) CartDiscountValuePtrOutput {
	return o
}

func (o CartDiscountValuePtrOutput) Elem() CartDiscountValueOutput {
	return o.ApplyT(func(v *CartDiscountValue) CartDiscountValue { return *v }).(CartDiscountValueOutput)
}

func (o CartDiscountValuePtrOutput) DistributionChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CartDiscountValue) *string {
		if v == nil {
			return nil
		}
		return v.DistributionChannelId
	}).(pulumi.StringPtrOutput)
}

func (o CartDiscountValuePtrOutput) Monies() CartDiscountValueMoneyArrayOutput {
	return o.ApplyT(func(v *CartDiscountValue) []CartDiscountValueMoney {
		if v == nil {
			return nil
		}
		return v.Monies
	}).(CartDiscountValueMoneyArrayOutput)
}

func (o CartDiscountValuePtrOutput) Permyriad() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CartDiscountValue) *int {
		if v == nil {
			return nil
		}
		return v.Permyriad
	}).(pulumi.IntPtrOutput)
}

func (o CartDiscountValuePtrOutput) ProductId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CartDiscountValue) *string {
		if v == nil {
			return nil
		}
		return v.ProductId
	}).(pulumi.StringPtrOutput)
}

func (o CartDiscountValuePtrOutput) SupplyChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CartDiscountValue) *string {
		if v == nil {
			return nil
		}
		return v.SupplyChannelId
	}).(pulumi.StringPtrOutput)
}

func (o CartDiscountValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CartDiscountValue) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o CartDiscountValuePtrOutput) Variant() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CartDiscountValue) *int {
		if v == nil {
			return nil
		}
		return v.Variant
	}).(pulumi.IntPtrOutput)
}

type CartDiscountValueMoney struct {
	CentAmount   int    `pulumi:"centAmount"`
	CurrencyCode string `pulumi:"currencyCode"`
}

// CartDiscountValueMoneyInput is an input type that accepts CartDiscountValueMoneyArgs and CartDiscountValueMoneyOutput values.
// You can construct a concrete instance of `CartDiscountValueMoneyInput` via:
//
//          CartDiscountValueMoneyArgs{...}
type CartDiscountValueMoneyInput interface {
	pulumi.Input

	ToCartDiscountValueMoneyOutput() CartDiscountValueMoneyOutput
	ToCartDiscountValueMoneyOutputWithContext(context.Context) CartDiscountValueMoneyOutput
}

type CartDiscountValueMoneyArgs struct {
	CentAmount   pulumi.IntInput    `pulumi:"centAmount"`
	CurrencyCode pulumi.StringInput `pulumi:"currencyCode"`
}

func (CartDiscountValueMoneyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CartDiscountValueMoney)(nil)).Elem()
}

func (i CartDiscountValueMoneyArgs) ToCartDiscountValueMoneyOutput() CartDiscountValueMoneyOutput {
	return i.ToCartDiscountValueMoneyOutputWithContext(context.Background())
}

func (i CartDiscountValueMoneyArgs) ToCartDiscountValueMoneyOutputWithContext(ctx context.Context) CartDiscountValueMoneyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CartDiscountValueMoneyOutput)
}

// CartDiscountValueMoneyArrayInput is an input type that accepts CartDiscountValueMoneyArray and CartDiscountValueMoneyArrayOutput values.
// You can construct a concrete instance of `CartDiscountValueMoneyArrayInput` via:
//
//          CartDiscountValueMoneyArray{ CartDiscountValueMoneyArgs{...} }
type CartDiscountValueMoneyArrayInput interface {
	pulumi.Input

	ToCartDiscountValueMoneyArrayOutput() CartDiscountValueMoneyArrayOutput
	ToCartDiscountValueMoneyArrayOutputWithContext(context.Context) CartDiscountValueMoneyArrayOutput
}

type CartDiscountValueMoneyArray []CartDiscountValueMoneyInput

func (CartDiscountValueMoneyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CartDiscountValueMoney)(nil)).Elem()
}

func (i CartDiscountValueMoneyArray) ToCartDiscountValueMoneyArrayOutput() CartDiscountValueMoneyArrayOutput {
	return i.ToCartDiscountValueMoneyArrayOutputWithContext(context.Background())
}

func (i CartDiscountValueMoneyArray) ToCartDiscountValueMoneyArrayOutputWithContext(ctx context.Context) CartDiscountValueMoneyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CartDiscountValueMoneyArrayOutput)
}

type CartDiscountValueMoneyOutput struct{ *pulumi.OutputState }

func (CartDiscountValueMoneyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CartDiscountValueMoney)(nil)).Elem()
}

func (o CartDiscountValueMoneyOutput) ToCartDiscountValueMoneyOutput() CartDiscountValueMoneyOutput {
	return o
}

func (o CartDiscountValueMoneyOutput) ToCartDiscountValueMoneyOutputWithContext(ctx context.Context) CartDiscountValueMoneyOutput {
	return o
}

func (o CartDiscountValueMoneyOutput) CentAmount() pulumi.IntOutput {
	return o.ApplyT(func(v CartDiscountValueMoney) int { return v.CentAmount }).(pulumi.IntOutput)
}

func (o CartDiscountValueMoneyOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v CartDiscountValueMoney) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

type CartDiscountValueMoneyArrayOutput struct{ *pulumi.OutputState }

func (CartDiscountValueMoneyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CartDiscountValueMoney)(nil)).Elem()
}

func (o CartDiscountValueMoneyArrayOutput) ToCartDiscountValueMoneyArrayOutput() CartDiscountValueMoneyArrayOutput {
	return o
}

func (o CartDiscountValueMoneyArrayOutput) ToCartDiscountValueMoneyArrayOutputWithContext(ctx context.Context) CartDiscountValueMoneyArrayOutput {
	return o
}

func (o CartDiscountValueMoneyArrayOutput) Index(i pulumi.IntInput) CartDiscountValueMoneyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CartDiscountValueMoney {
		return vs[0].([]CartDiscountValueMoney)[vs[1].(int)]
	}).(CartDiscountValueMoneyOutput)
}

type ProductTypeAttribute struct {
	Constraint *string                  `pulumi:"constraint"`
	InputHint  *string                  `pulumi:"inputHint"`
	InputTip   map[string]interface{}   `pulumi:"inputTip"`
	Label      map[string]interface{}   `pulumi:"label"`
	Name       string                   `pulumi:"name"`
	Required   *bool                    `pulumi:"required"`
	Searchable *bool                    `pulumi:"searchable"`
	Type       ProductTypeAttributeType `pulumi:"type"`
}

// ProductTypeAttributeInput is an input type that accepts ProductTypeAttributeArgs and ProductTypeAttributeOutput values.
// You can construct a concrete instance of `ProductTypeAttributeInput` via:
//
//          ProductTypeAttributeArgs{...}
type ProductTypeAttributeInput interface {
	pulumi.Input

	ToProductTypeAttributeOutput() ProductTypeAttributeOutput
	ToProductTypeAttributeOutputWithContext(context.Context) ProductTypeAttributeOutput
}

type ProductTypeAttributeArgs struct {
	Constraint pulumi.StringPtrInput         `pulumi:"constraint"`
	InputHint  pulumi.StringPtrInput         `pulumi:"inputHint"`
	InputTip   pulumi.MapInput               `pulumi:"inputTip"`
	Label      pulumi.MapInput               `pulumi:"label"`
	Name       pulumi.StringInput            `pulumi:"name"`
	Required   pulumi.BoolPtrInput           `pulumi:"required"`
	Searchable pulumi.BoolPtrInput           `pulumi:"searchable"`
	Type       ProductTypeAttributeTypeInput `pulumi:"type"`
}

func (ProductTypeAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttribute)(nil)).Elem()
}

func (i ProductTypeAttributeArgs) ToProductTypeAttributeOutput() ProductTypeAttributeOutput {
	return i.ToProductTypeAttributeOutputWithContext(context.Background())
}

func (i ProductTypeAttributeArgs) ToProductTypeAttributeOutputWithContext(ctx context.Context) ProductTypeAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeOutput)
}

// ProductTypeAttributeArrayInput is an input type that accepts ProductTypeAttributeArray and ProductTypeAttributeArrayOutput values.
// You can construct a concrete instance of `ProductTypeAttributeArrayInput` via:
//
//          ProductTypeAttributeArray{ ProductTypeAttributeArgs{...} }
type ProductTypeAttributeArrayInput interface {
	pulumi.Input

	ToProductTypeAttributeArrayOutput() ProductTypeAttributeArrayOutput
	ToProductTypeAttributeArrayOutputWithContext(context.Context) ProductTypeAttributeArrayOutput
}

type ProductTypeAttributeArray []ProductTypeAttributeInput

func (ProductTypeAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductTypeAttribute)(nil)).Elem()
}

func (i ProductTypeAttributeArray) ToProductTypeAttributeArrayOutput() ProductTypeAttributeArrayOutput {
	return i.ToProductTypeAttributeArrayOutputWithContext(context.Background())
}

func (i ProductTypeAttributeArray) ToProductTypeAttributeArrayOutputWithContext(ctx context.Context) ProductTypeAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeArrayOutput)
}

type ProductTypeAttributeOutput struct{ *pulumi.OutputState }

func (ProductTypeAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttribute)(nil)).Elem()
}

func (o ProductTypeAttributeOutput) ToProductTypeAttributeOutput() ProductTypeAttributeOutput {
	return o
}

func (o ProductTypeAttributeOutput) ToProductTypeAttributeOutputWithContext(ctx context.Context) ProductTypeAttributeOutput {
	return o
}

func (o ProductTypeAttributeOutput) Constraint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductTypeAttribute) *string { return v.Constraint }).(pulumi.StringPtrOutput)
}

func (o ProductTypeAttributeOutput) InputHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductTypeAttribute) *string { return v.InputHint }).(pulumi.StringPtrOutput)
}

func (o ProductTypeAttributeOutput) InputTip() pulumi.MapOutput {
	return o.ApplyT(func(v ProductTypeAttribute) map[string]interface{} { return v.InputTip }).(pulumi.MapOutput)
}

func (o ProductTypeAttributeOutput) Label() pulumi.MapOutput {
	return o.ApplyT(func(v ProductTypeAttribute) map[string]interface{} { return v.Label }).(pulumi.MapOutput)
}

func (o ProductTypeAttributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProductTypeAttribute) string { return v.Name }).(pulumi.StringOutput)
}

func (o ProductTypeAttributeOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProductTypeAttribute) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

func (o ProductTypeAttributeOutput) Searchable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProductTypeAttribute) *bool { return v.Searchable }).(pulumi.BoolPtrOutput)
}

func (o ProductTypeAttributeOutput) Type() ProductTypeAttributeTypeOutput {
	return o.ApplyT(func(v ProductTypeAttribute) ProductTypeAttributeType { return v.Type }).(ProductTypeAttributeTypeOutput)
}

type ProductTypeAttributeArrayOutput struct{ *pulumi.OutputState }

func (ProductTypeAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductTypeAttribute)(nil)).Elem()
}

func (o ProductTypeAttributeArrayOutput) ToProductTypeAttributeArrayOutput() ProductTypeAttributeArrayOutput {
	return o
}

func (o ProductTypeAttributeArrayOutput) ToProductTypeAttributeArrayOutputWithContext(ctx context.Context) ProductTypeAttributeArrayOutput {
	return o
}

func (o ProductTypeAttributeArrayOutput) Index(i pulumi.IntInput) ProductTypeAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductTypeAttribute {
		return vs[0].([]ProductTypeAttribute)[vs[1].(int)]
	}).(ProductTypeAttributeOutput)
}

type ProductTypeAttributeType struct {
	ElementType2    *ProductTypeAttributeTypeElementType2    `pulumi:"ElementType2"`
	LocalizedValues []ProductTypeAttributeTypeLocalizedValue `pulumi:"localizedValues"`
	Name            string                                   `pulumi:"name"`
	ReferenceTypeId *string                                  `pulumi:"referenceTypeId"`
	TypeReference   *string                                  `pulumi:"typeReference"`
	Values          map[string]interface{}                   `pulumi:"values"`
}

// ProductTypeAttributeTypeInput is an input type that accepts ProductTypeAttributeTypeArgs and ProductTypeAttributeTypeOutput values.
// You can construct a concrete instance of `ProductTypeAttributeTypeInput` via:
//
//          ProductTypeAttributeTypeArgs{...}
type ProductTypeAttributeTypeInput interface {
	pulumi.Input

	ToProductTypeAttributeTypeOutput() ProductTypeAttributeTypeOutput
	ToProductTypeAttributeTypeOutputWithContext(context.Context) ProductTypeAttributeTypeOutput
}

type ProductTypeAttributeTypeArgs struct {
	ElementType2    ProductTypeAttributeTypeElementType2PtrInput     `pulumi:"ElementType2"`
	LocalizedValues ProductTypeAttributeTypeLocalizedValueArrayInput `pulumi:"localizedValues"`
	Name            pulumi.StringInput                               `pulumi:"name"`
	ReferenceTypeId pulumi.StringPtrInput                            `pulumi:"referenceTypeId"`
	TypeReference   pulumi.StringPtrInput                            `pulumi:"typeReference"`
	Values          pulumi.MapInput                                  `pulumi:"values"`
}

func (ProductTypeAttributeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttributeType)(nil)).Elem()
}

func (i ProductTypeAttributeTypeArgs) ToProductTypeAttributeTypeOutput() ProductTypeAttributeTypeOutput {
	return i.ToProductTypeAttributeTypeOutputWithContext(context.Background())
}

func (i ProductTypeAttributeTypeArgs) ToProductTypeAttributeTypeOutputWithContext(ctx context.Context) ProductTypeAttributeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeTypeOutput)
}

type ProductTypeAttributeTypeOutput struct{ *pulumi.OutputState }

func (ProductTypeAttributeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttributeType)(nil)).Elem()
}

func (o ProductTypeAttributeTypeOutput) ToProductTypeAttributeTypeOutput() ProductTypeAttributeTypeOutput {
	return o
}

func (o ProductTypeAttributeTypeOutput) ToProductTypeAttributeTypeOutputWithContext(ctx context.Context) ProductTypeAttributeTypeOutput {
	return o
}

func (o ProductTypeAttributeTypeOutput) ElementType2() ProductTypeAttributeTypeElementType2PtrOutput {
	return o.ApplyT(func(v ProductTypeAttributeType) *ProductTypeAttributeTypeElementType2 { return v.ElementType2 }).(ProductTypeAttributeTypeElementType2PtrOutput)
}

func (o ProductTypeAttributeTypeOutput) LocalizedValues() ProductTypeAttributeTypeLocalizedValueArrayOutput {
	return o.ApplyT(func(v ProductTypeAttributeType) []ProductTypeAttributeTypeLocalizedValue { return v.LocalizedValues }).(ProductTypeAttributeTypeLocalizedValueArrayOutput)
}

func (o ProductTypeAttributeTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProductTypeAttributeType) string { return v.Name }).(pulumi.StringOutput)
}

func (o ProductTypeAttributeTypeOutput) ReferenceTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductTypeAttributeType) *string { return v.ReferenceTypeId }).(pulumi.StringPtrOutput)
}

func (o ProductTypeAttributeTypeOutput) TypeReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductTypeAttributeType) *string { return v.TypeReference }).(pulumi.StringPtrOutput)
}

func (o ProductTypeAttributeTypeOutput) Values() pulumi.MapOutput {
	return o.ApplyT(func(v ProductTypeAttributeType) map[string]interface{} { return v.Values }).(pulumi.MapOutput)
}

type ProductTypeAttributeTypeElementType2 struct {
	LocalizedValues []ProductTypeAttributeTypeElementType2LocalizedValue `pulumi:"localizedValues"`
	Name            string                                               `pulumi:"name"`
	ReferenceTypeId *string                                              `pulumi:"referenceTypeId"`
	TypeReference   *string                                              `pulumi:"typeReference"`
	Values          map[string]interface{}                               `pulumi:"values"`
}

// ProductTypeAttributeTypeElementType2Input is an input type that accepts ProductTypeAttributeTypeElementType2Args and ProductTypeAttributeTypeElementType2Output values.
// You can construct a concrete instance of `ProductTypeAttributeTypeElementType2Input` via:
//
//          ProductTypeAttributeTypeElementType2Args{...}
type ProductTypeAttributeTypeElementType2Input interface {
	pulumi.Input

	ToProductTypeAttributeTypeElementType2Output() ProductTypeAttributeTypeElementType2Output
	ToProductTypeAttributeTypeElementType2OutputWithContext(context.Context) ProductTypeAttributeTypeElementType2Output
}

type ProductTypeAttributeTypeElementType2Args struct {
	LocalizedValues ProductTypeAttributeTypeElementType2LocalizedValueArrayInput `pulumi:"localizedValues"`
	Name            pulumi.StringInput                                           `pulumi:"name"`
	ReferenceTypeId pulumi.StringPtrInput                                        `pulumi:"referenceTypeId"`
	TypeReference   pulumi.StringPtrInput                                        `pulumi:"typeReference"`
	Values          pulumi.MapInput                                              `pulumi:"values"`
}

func (ProductTypeAttributeTypeElementType2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttributeTypeElementType2)(nil)).Elem()
}

func (i ProductTypeAttributeTypeElementType2Args) ToProductTypeAttributeTypeElementType2Output() ProductTypeAttributeTypeElementType2Output {
	return i.ToProductTypeAttributeTypeElementType2OutputWithContext(context.Background())
}

func (i ProductTypeAttributeTypeElementType2Args) ToProductTypeAttributeTypeElementType2OutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2Output {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeTypeElementType2Output)
}

func (i ProductTypeAttributeTypeElementType2Args) ToProductTypeAttributeTypeElementType2PtrOutput() ProductTypeAttributeTypeElementType2PtrOutput {
	return i.ToProductTypeAttributeTypeElementType2PtrOutputWithContext(context.Background())
}

func (i ProductTypeAttributeTypeElementType2Args) ToProductTypeAttributeTypeElementType2PtrOutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeTypeElementType2Output).ToProductTypeAttributeTypeElementType2PtrOutputWithContext(ctx)
}

// ProductTypeAttributeTypeElementType2PtrInput is an input type that accepts ProductTypeAttributeTypeElementType2Args, ProductTypeAttributeTypeElementType2Ptr and ProductTypeAttributeTypeElementType2PtrOutput values.
// You can construct a concrete instance of `ProductTypeAttributeTypeElementType2PtrInput` via:
//
//          ProductTypeAttributeTypeElementType2Args{...}
//
//  or:
//
//          nil
type ProductTypeAttributeTypeElementType2PtrInput interface {
	pulumi.Input

	ToProductTypeAttributeTypeElementType2PtrOutput() ProductTypeAttributeTypeElementType2PtrOutput
	ToProductTypeAttributeTypeElementType2PtrOutputWithContext(context.Context) ProductTypeAttributeTypeElementType2PtrOutput
}

type productTypeAttributeTypeElementType2PtrType ProductTypeAttributeTypeElementType2Args

func ProductTypeAttributeTypeElementType2Ptr(v *ProductTypeAttributeTypeElementType2Args) ProductTypeAttributeTypeElementType2PtrInput {
	return (*productTypeAttributeTypeElementType2PtrType)(v)
}

func (*productTypeAttributeTypeElementType2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductTypeAttributeTypeElementType2)(nil)).Elem()
}

func (i *productTypeAttributeTypeElementType2PtrType) ToProductTypeAttributeTypeElementType2PtrOutput() ProductTypeAttributeTypeElementType2PtrOutput {
	return i.ToProductTypeAttributeTypeElementType2PtrOutputWithContext(context.Background())
}

func (i *productTypeAttributeTypeElementType2PtrType) ToProductTypeAttributeTypeElementType2PtrOutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeTypeElementType2PtrOutput)
}

type ProductTypeAttributeTypeElementType2Output struct{ *pulumi.OutputState }

func (ProductTypeAttributeTypeElementType2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttributeTypeElementType2)(nil)).Elem()
}

func (o ProductTypeAttributeTypeElementType2Output) ToProductTypeAttributeTypeElementType2Output() ProductTypeAttributeTypeElementType2Output {
	return o
}

func (o ProductTypeAttributeTypeElementType2Output) ToProductTypeAttributeTypeElementType2OutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2Output {
	return o
}

func (o ProductTypeAttributeTypeElementType2Output) ToProductTypeAttributeTypeElementType2PtrOutput() ProductTypeAttributeTypeElementType2PtrOutput {
	return o.ToProductTypeAttributeTypeElementType2PtrOutputWithContext(context.Background())
}

func (o ProductTypeAttributeTypeElementType2Output) ToProductTypeAttributeTypeElementType2PtrOutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2PtrOutput {
	return o.ApplyT(func(v ProductTypeAttributeTypeElementType2) *ProductTypeAttributeTypeElementType2 {
		return &v
	}).(ProductTypeAttributeTypeElementType2PtrOutput)
}
func (o ProductTypeAttributeTypeElementType2Output) LocalizedValues() ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput {
	return o.ApplyT(func(v ProductTypeAttributeTypeElementType2) []ProductTypeAttributeTypeElementType2LocalizedValue {
		return v.LocalizedValues
	}).(ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput)
}

func (o ProductTypeAttributeTypeElementType2Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProductTypeAttributeTypeElementType2) string { return v.Name }).(pulumi.StringOutput)
}

func (o ProductTypeAttributeTypeElementType2Output) ReferenceTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductTypeAttributeTypeElementType2) *string { return v.ReferenceTypeId }).(pulumi.StringPtrOutput)
}

func (o ProductTypeAttributeTypeElementType2Output) TypeReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductTypeAttributeTypeElementType2) *string { return v.TypeReference }).(pulumi.StringPtrOutput)
}

func (o ProductTypeAttributeTypeElementType2Output) Values() pulumi.MapOutput {
	return o.ApplyT(func(v ProductTypeAttributeTypeElementType2) map[string]interface{} { return v.Values }).(pulumi.MapOutput)
}

type ProductTypeAttributeTypeElementType2PtrOutput struct{ *pulumi.OutputState }

func (ProductTypeAttributeTypeElementType2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductTypeAttributeTypeElementType2)(nil)).Elem()
}

func (o ProductTypeAttributeTypeElementType2PtrOutput) ToProductTypeAttributeTypeElementType2PtrOutput() ProductTypeAttributeTypeElementType2PtrOutput {
	return o
}

func (o ProductTypeAttributeTypeElementType2PtrOutput) ToProductTypeAttributeTypeElementType2PtrOutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2PtrOutput {
	return o
}

func (o ProductTypeAttributeTypeElementType2PtrOutput) Elem() ProductTypeAttributeTypeElementType2Output {
	return o.ApplyT(func(v *ProductTypeAttributeTypeElementType2) ProductTypeAttributeTypeElementType2 { return *v }).(ProductTypeAttributeTypeElementType2Output)
}

func (o ProductTypeAttributeTypeElementType2PtrOutput) LocalizedValues() ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput {
	return o.ApplyT(func(v *ProductTypeAttributeTypeElementType2) []ProductTypeAttributeTypeElementType2LocalizedValue {
		if v == nil {
			return nil
		}
		return v.LocalizedValues
	}).(ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput)
}

func (o ProductTypeAttributeTypeElementType2PtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductTypeAttributeTypeElementType2) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o ProductTypeAttributeTypeElementType2PtrOutput) ReferenceTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductTypeAttributeTypeElementType2) *string {
		if v == nil {
			return nil
		}
		return v.ReferenceTypeId
	}).(pulumi.StringPtrOutput)
}

func (o ProductTypeAttributeTypeElementType2PtrOutput) TypeReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductTypeAttributeTypeElementType2) *string {
		if v == nil {
			return nil
		}
		return v.TypeReference
	}).(pulumi.StringPtrOutput)
}

func (o ProductTypeAttributeTypeElementType2PtrOutput) Values() pulumi.MapOutput {
	return o.ApplyT(func(v *ProductTypeAttributeTypeElementType2) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.MapOutput)
}

type ProductTypeAttributeTypeElementType2LocalizedValue struct {
	Key   string                 `pulumi:"key"`
	Label map[string]interface{} `pulumi:"label"`
}

// ProductTypeAttributeTypeElementType2LocalizedValueInput is an input type that accepts ProductTypeAttributeTypeElementType2LocalizedValueArgs and ProductTypeAttributeTypeElementType2LocalizedValueOutput values.
// You can construct a concrete instance of `ProductTypeAttributeTypeElementType2LocalizedValueInput` via:
//
//          ProductTypeAttributeTypeElementType2LocalizedValueArgs{...}
type ProductTypeAttributeTypeElementType2LocalizedValueInput interface {
	pulumi.Input

	ToProductTypeAttributeTypeElementType2LocalizedValueOutput() ProductTypeAttributeTypeElementType2LocalizedValueOutput
	ToProductTypeAttributeTypeElementType2LocalizedValueOutputWithContext(context.Context) ProductTypeAttributeTypeElementType2LocalizedValueOutput
}

type ProductTypeAttributeTypeElementType2LocalizedValueArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Label pulumi.MapInput    `pulumi:"label"`
}

func (ProductTypeAttributeTypeElementType2LocalizedValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttributeTypeElementType2LocalizedValue)(nil)).Elem()
}

func (i ProductTypeAttributeTypeElementType2LocalizedValueArgs) ToProductTypeAttributeTypeElementType2LocalizedValueOutput() ProductTypeAttributeTypeElementType2LocalizedValueOutput {
	return i.ToProductTypeAttributeTypeElementType2LocalizedValueOutputWithContext(context.Background())
}

func (i ProductTypeAttributeTypeElementType2LocalizedValueArgs) ToProductTypeAttributeTypeElementType2LocalizedValueOutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2LocalizedValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeTypeElementType2LocalizedValueOutput)
}

// ProductTypeAttributeTypeElementType2LocalizedValueArrayInput is an input type that accepts ProductTypeAttributeTypeElementType2LocalizedValueArray and ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput values.
// You can construct a concrete instance of `ProductTypeAttributeTypeElementType2LocalizedValueArrayInput` via:
//
//          ProductTypeAttributeTypeElementType2LocalizedValueArray{ ProductTypeAttributeTypeElementType2LocalizedValueArgs{...} }
type ProductTypeAttributeTypeElementType2LocalizedValueArrayInput interface {
	pulumi.Input

	ToProductTypeAttributeTypeElementType2LocalizedValueArrayOutput() ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput
	ToProductTypeAttributeTypeElementType2LocalizedValueArrayOutputWithContext(context.Context) ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput
}

type ProductTypeAttributeTypeElementType2LocalizedValueArray []ProductTypeAttributeTypeElementType2LocalizedValueInput

func (ProductTypeAttributeTypeElementType2LocalizedValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductTypeAttributeTypeElementType2LocalizedValue)(nil)).Elem()
}

func (i ProductTypeAttributeTypeElementType2LocalizedValueArray) ToProductTypeAttributeTypeElementType2LocalizedValueArrayOutput() ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput {
	return i.ToProductTypeAttributeTypeElementType2LocalizedValueArrayOutputWithContext(context.Background())
}

func (i ProductTypeAttributeTypeElementType2LocalizedValueArray) ToProductTypeAttributeTypeElementType2LocalizedValueArrayOutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput)
}

type ProductTypeAttributeTypeElementType2LocalizedValueOutput struct{ *pulumi.OutputState }

func (ProductTypeAttributeTypeElementType2LocalizedValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttributeTypeElementType2LocalizedValue)(nil)).Elem()
}

func (o ProductTypeAttributeTypeElementType2LocalizedValueOutput) ToProductTypeAttributeTypeElementType2LocalizedValueOutput() ProductTypeAttributeTypeElementType2LocalizedValueOutput {
	return o
}

func (o ProductTypeAttributeTypeElementType2LocalizedValueOutput) ToProductTypeAttributeTypeElementType2LocalizedValueOutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2LocalizedValueOutput {
	return o
}

func (o ProductTypeAttributeTypeElementType2LocalizedValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProductTypeAttributeTypeElementType2LocalizedValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o ProductTypeAttributeTypeElementType2LocalizedValueOutput) Label() pulumi.MapOutput {
	return o.ApplyT(func(v ProductTypeAttributeTypeElementType2LocalizedValue) map[string]interface{} { return v.Label }).(pulumi.MapOutput)
}

type ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput struct{ *pulumi.OutputState }

func (ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductTypeAttributeTypeElementType2LocalizedValue)(nil)).Elem()
}

func (o ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput) ToProductTypeAttributeTypeElementType2LocalizedValueArrayOutput() ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput {
	return o
}

func (o ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput) ToProductTypeAttributeTypeElementType2LocalizedValueArrayOutputWithContext(ctx context.Context) ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput {
	return o
}

func (o ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput) Index(i pulumi.IntInput) ProductTypeAttributeTypeElementType2LocalizedValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductTypeAttributeTypeElementType2LocalizedValue {
		return vs[0].([]ProductTypeAttributeTypeElementType2LocalizedValue)[vs[1].(int)]
	}).(ProductTypeAttributeTypeElementType2LocalizedValueOutput)
}

type ProductTypeAttributeTypeLocalizedValue struct {
	Key   string                 `pulumi:"key"`
	Label map[string]interface{} `pulumi:"label"`
}

// ProductTypeAttributeTypeLocalizedValueInput is an input type that accepts ProductTypeAttributeTypeLocalizedValueArgs and ProductTypeAttributeTypeLocalizedValueOutput values.
// You can construct a concrete instance of `ProductTypeAttributeTypeLocalizedValueInput` via:
//
//          ProductTypeAttributeTypeLocalizedValueArgs{...}
type ProductTypeAttributeTypeLocalizedValueInput interface {
	pulumi.Input

	ToProductTypeAttributeTypeLocalizedValueOutput() ProductTypeAttributeTypeLocalizedValueOutput
	ToProductTypeAttributeTypeLocalizedValueOutputWithContext(context.Context) ProductTypeAttributeTypeLocalizedValueOutput
}

type ProductTypeAttributeTypeLocalizedValueArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Label pulumi.MapInput    `pulumi:"label"`
}

func (ProductTypeAttributeTypeLocalizedValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttributeTypeLocalizedValue)(nil)).Elem()
}

func (i ProductTypeAttributeTypeLocalizedValueArgs) ToProductTypeAttributeTypeLocalizedValueOutput() ProductTypeAttributeTypeLocalizedValueOutput {
	return i.ToProductTypeAttributeTypeLocalizedValueOutputWithContext(context.Background())
}

func (i ProductTypeAttributeTypeLocalizedValueArgs) ToProductTypeAttributeTypeLocalizedValueOutputWithContext(ctx context.Context) ProductTypeAttributeTypeLocalizedValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeTypeLocalizedValueOutput)
}

// ProductTypeAttributeTypeLocalizedValueArrayInput is an input type that accepts ProductTypeAttributeTypeLocalizedValueArray and ProductTypeAttributeTypeLocalizedValueArrayOutput values.
// You can construct a concrete instance of `ProductTypeAttributeTypeLocalizedValueArrayInput` via:
//
//          ProductTypeAttributeTypeLocalizedValueArray{ ProductTypeAttributeTypeLocalizedValueArgs{...} }
type ProductTypeAttributeTypeLocalizedValueArrayInput interface {
	pulumi.Input

	ToProductTypeAttributeTypeLocalizedValueArrayOutput() ProductTypeAttributeTypeLocalizedValueArrayOutput
	ToProductTypeAttributeTypeLocalizedValueArrayOutputWithContext(context.Context) ProductTypeAttributeTypeLocalizedValueArrayOutput
}

type ProductTypeAttributeTypeLocalizedValueArray []ProductTypeAttributeTypeLocalizedValueInput

func (ProductTypeAttributeTypeLocalizedValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductTypeAttributeTypeLocalizedValue)(nil)).Elem()
}

func (i ProductTypeAttributeTypeLocalizedValueArray) ToProductTypeAttributeTypeLocalizedValueArrayOutput() ProductTypeAttributeTypeLocalizedValueArrayOutput {
	return i.ToProductTypeAttributeTypeLocalizedValueArrayOutputWithContext(context.Background())
}

func (i ProductTypeAttributeTypeLocalizedValueArray) ToProductTypeAttributeTypeLocalizedValueArrayOutputWithContext(ctx context.Context) ProductTypeAttributeTypeLocalizedValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeAttributeTypeLocalizedValueArrayOutput)
}

type ProductTypeAttributeTypeLocalizedValueOutput struct{ *pulumi.OutputState }

func (ProductTypeAttributeTypeLocalizedValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductTypeAttributeTypeLocalizedValue)(nil)).Elem()
}

func (o ProductTypeAttributeTypeLocalizedValueOutput) ToProductTypeAttributeTypeLocalizedValueOutput() ProductTypeAttributeTypeLocalizedValueOutput {
	return o
}

func (o ProductTypeAttributeTypeLocalizedValueOutput) ToProductTypeAttributeTypeLocalizedValueOutputWithContext(ctx context.Context) ProductTypeAttributeTypeLocalizedValueOutput {
	return o
}

func (o ProductTypeAttributeTypeLocalizedValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProductTypeAttributeTypeLocalizedValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o ProductTypeAttributeTypeLocalizedValueOutput) Label() pulumi.MapOutput {
	return o.ApplyT(func(v ProductTypeAttributeTypeLocalizedValue) map[string]interface{} { return v.Label }).(pulumi.MapOutput)
}

type ProductTypeAttributeTypeLocalizedValueArrayOutput struct{ *pulumi.OutputState }

func (ProductTypeAttributeTypeLocalizedValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductTypeAttributeTypeLocalizedValue)(nil)).Elem()
}

func (o ProductTypeAttributeTypeLocalizedValueArrayOutput) ToProductTypeAttributeTypeLocalizedValueArrayOutput() ProductTypeAttributeTypeLocalizedValueArrayOutput {
	return o
}

func (o ProductTypeAttributeTypeLocalizedValueArrayOutput) ToProductTypeAttributeTypeLocalizedValueArrayOutputWithContext(ctx context.Context) ProductTypeAttributeTypeLocalizedValueArrayOutput {
	return o
}

func (o ProductTypeAttributeTypeLocalizedValueArrayOutput) Index(i pulumi.IntInput) ProductTypeAttributeTypeLocalizedValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductTypeAttributeTypeLocalizedValue {
		return vs[0].([]ProductTypeAttributeTypeLocalizedValue)[vs[1].(int)]
	}).(ProductTypeAttributeTypeLocalizedValueOutput)
}

type ProjectSettingsExternalOauth struct {
	AuthorizationHeader string `pulumi:"authorizationHeader"`
	Url                 string `pulumi:"url"`
}

// ProjectSettingsExternalOauthInput is an input type that accepts ProjectSettingsExternalOauthArgs and ProjectSettingsExternalOauthOutput values.
// You can construct a concrete instance of `ProjectSettingsExternalOauthInput` via:
//
//          ProjectSettingsExternalOauthArgs{...}
type ProjectSettingsExternalOauthInput interface {
	pulumi.Input

	ToProjectSettingsExternalOauthOutput() ProjectSettingsExternalOauthOutput
	ToProjectSettingsExternalOauthOutputWithContext(context.Context) ProjectSettingsExternalOauthOutput
}

type ProjectSettingsExternalOauthArgs struct {
	AuthorizationHeader pulumi.StringInput `pulumi:"authorizationHeader"`
	Url                 pulumi.StringInput `pulumi:"url"`
}

func (ProjectSettingsExternalOauthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSettingsExternalOauth)(nil)).Elem()
}

func (i ProjectSettingsExternalOauthArgs) ToProjectSettingsExternalOauthOutput() ProjectSettingsExternalOauthOutput {
	return i.ToProjectSettingsExternalOauthOutputWithContext(context.Background())
}

func (i ProjectSettingsExternalOauthArgs) ToProjectSettingsExternalOauthOutputWithContext(ctx context.Context) ProjectSettingsExternalOauthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSettingsExternalOauthOutput)
}

func (i ProjectSettingsExternalOauthArgs) ToProjectSettingsExternalOauthPtrOutput() ProjectSettingsExternalOauthPtrOutput {
	return i.ToProjectSettingsExternalOauthPtrOutputWithContext(context.Background())
}

func (i ProjectSettingsExternalOauthArgs) ToProjectSettingsExternalOauthPtrOutputWithContext(ctx context.Context) ProjectSettingsExternalOauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSettingsExternalOauthOutput).ToProjectSettingsExternalOauthPtrOutputWithContext(ctx)
}

// ProjectSettingsExternalOauthPtrInput is an input type that accepts ProjectSettingsExternalOauthArgs, ProjectSettingsExternalOauthPtr and ProjectSettingsExternalOauthPtrOutput values.
// You can construct a concrete instance of `ProjectSettingsExternalOauthPtrInput` via:
//
//          ProjectSettingsExternalOauthArgs{...}
//
//  or:
//
//          nil
type ProjectSettingsExternalOauthPtrInput interface {
	pulumi.Input

	ToProjectSettingsExternalOauthPtrOutput() ProjectSettingsExternalOauthPtrOutput
	ToProjectSettingsExternalOauthPtrOutputWithContext(context.Context) ProjectSettingsExternalOauthPtrOutput
}

type projectSettingsExternalOauthPtrType ProjectSettingsExternalOauthArgs

func ProjectSettingsExternalOauthPtr(v *ProjectSettingsExternalOauthArgs) ProjectSettingsExternalOauthPtrInput {
	return (*projectSettingsExternalOauthPtrType)(v)
}

func (*projectSettingsExternalOauthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSettingsExternalOauth)(nil)).Elem()
}

func (i *projectSettingsExternalOauthPtrType) ToProjectSettingsExternalOauthPtrOutput() ProjectSettingsExternalOauthPtrOutput {
	return i.ToProjectSettingsExternalOauthPtrOutputWithContext(context.Background())
}

func (i *projectSettingsExternalOauthPtrType) ToProjectSettingsExternalOauthPtrOutputWithContext(ctx context.Context) ProjectSettingsExternalOauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSettingsExternalOauthPtrOutput)
}

type ProjectSettingsExternalOauthOutput struct{ *pulumi.OutputState }

func (ProjectSettingsExternalOauthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSettingsExternalOauth)(nil)).Elem()
}

func (o ProjectSettingsExternalOauthOutput) ToProjectSettingsExternalOauthOutput() ProjectSettingsExternalOauthOutput {
	return o
}

func (o ProjectSettingsExternalOauthOutput) ToProjectSettingsExternalOauthOutputWithContext(ctx context.Context) ProjectSettingsExternalOauthOutput {
	return o
}

func (o ProjectSettingsExternalOauthOutput) ToProjectSettingsExternalOauthPtrOutput() ProjectSettingsExternalOauthPtrOutput {
	return o.ToProjectSettingsExternalOauthPtrOutputWithContext(context.Background())
}

func (o ProjectSettingsExternalOauthOutput) ToProjectSettingsExternalOauthPtrOutputWithContext(ctx context.Context) ProjectSettingsExternalOauthPtrOutput {
	return o.ApplyT(func(v ProjectSettingsExternalOauth) *ProjectSettingsExternalOauth {
		return &v
	}).(ProjectSettingsExternalOauthPtrOutput)
}
func (o ProjectSettingsExternalOauthOutput) AuthorizationHeader() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectSettingsExternalOauth) string { return v.AuthorizationHeader }).(pulumi.StringOutput)
}

func (o ProjectSettingsExternalOauthOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectSettingsExternalOauth) string { return v.Url }).(pulumi.StringOutput)
}

type ProjectSettingsExternalOauthPtrOutput struct{ *pulumi.OutputState }

func (ProjectSettingsExternalOauthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSettingsExternalOauth)(nil)).Elem()
}

func (o ProjectSettingsExternalOauthPtrOutput) ToProjectSettingsExternalOauthPtrOutput() ProjectSettingsExternalOauthPtrOutput {
	return o
}

func (o ProjectSettingsExternalOauthPtrOutput) ToProjectSettingsExternalOauthPtrOutputWithContext(ctx context.Context) ProjectSettingsExternalOauthPtrOutput {
	return o
}

func (o ProjectSettingsExternalOauthPtrOutput) Elem() ProjectSettingsExternalOauthOutput {
	return o.ApplyT(func(v *ProjectSettingsExternalOauth) ProjectSettingsExternalOauth { return *v }).(ProjectSettingsExternalOauthOutput)
}

func (o ProjectSettingsExternalOauthPtrOutput) AuthorizationHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSettingsExternalOauth) *string {
		if v == nil {
			return nil
		}
		return &v.AuthorizationHeader
	}).(pulumi.StringPtrOutput)
}

func (o ProjectSettingsExternalOauthPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSettingsExternalOauth) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type ProjectSettingsMessages struct {
	Enabled bool `pulumi:"enabled"`
}

// ProjectSettingsMessagesInput is an input type that accepts ProjectSettingsMessagesArgs and ProjectSettingsMessagesOutput values.
// You can construct a concrete instance of `ProjectSettingsMessagesInput` via:
//
//          ProjectSettingsMessagesArgs{...}
type ProjectSettingsMessagesInput interface {
	pulumi.Input

	ToProjectSettingsMessagesOutput() ProjectSettingsMessagesOutput
	ToProjectSettingsMessagesOutputWithContext(context.Context) ProjectSettingsMessagesOutput
}

type ProjectSettingsMessagesArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ProjectSettingsMessagesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSettingsMessages)(nil)).Elem()
}

func (i ProjectSettingsMessagesArgs) ToProjectSettingsMessagesOutput() ProjectSettingsMessagesOutput {
	return i.ToProjectSettingsMessagesOutputWithContext(context.Background())
}

func (i ProjectSettingsMessagesArgs) ToProjectSettingsMessagesOutputWithContext(ctx context.Context) ProjectSettingsMessagesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSettingsMessagesOutput)
}

func (i ProjectSettingsMessagesArgs) ToProjectSettingsMessagesPtrOutput() ProjectSettingsMessagesPtrOutput {
	return i.ToProjectSettingsMessagesPtrOutputWithContext(context.Background())
}

func (i ProjectSettingsMessagesArgs) ToProjectSettingsMessagesPtrOutputWithContext(ctx context.Context) ProjectSettingsMessagesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSettingsMessagesOutput).ToProjectSettingsMessagesPtrOutputWithContext(ctx)
}

// ProjectSettingsMessagesPtrInput is an input type that accepts ProjectSettingsMessagesArgs, ProjectSettingsMessagesPtr and ProjectSettingsMessagesPtrOutput values.
// You can construct a concrete instance of `ProjectSettingsMessagesPtrInput` via:
//
//          ProjectSettingsMessagesArgs{...}
//
//  or:
//
//          nil
type ProjectSettingsMessagesPtrInput interface {
	pulumi.Input

	ToProjectSettingsMessagesPtrOutput() ProjectSettingsMessagesPtrOutput
	ToProjectSettingsMessagesPtrOutputWithContext(context.Context) ProjectSettingsMessagesPtrOutput
}

type projectSettingsMessagesPtrType ProjectSettingsMessagesArgs

func ProjectSettingsMessagesPtr(v *ProjectSettingsMessagesArgs) ProjectSettingsMessagesPtrInput {
	return (*projectSettingsMessagesPtrType)(v)
}

func (*projectSettingsMessagesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSettingsMessages)(nil)).Elem()
}

func (i *projectSettingsMessagesPtrType) ToProjectSettingsMessagesPtrOutput() ProjectSettingsMessagesPtrOutput {
	return i.ToProjectSettingsMessagesPtrOutputWithContext(context.Background())
}

func (i *projectSettingsMessagesPtrType) ToProjectSettingsMessagesPtrOutputWithContext(ctx context.Context) ProjectSettingsMessagesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSettingsMessagesPtrOutput)
}

type ProjectSettingsMessagesOutput struct{ *pulumi.OutputState }

func (ProjectSettingsMessagesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSettingsMessages)(nil)).Elem()
}

func (o ProjectSettingsMessagesOutput) ToProjectSettingsMessagesOutput() ProjectSettingsMessagesOutput {
	return o
}

func (o ProjectSettingsMessagesOutput) ToProjectSettingsMessagesOutputWithContext(ctx context.Context) ProjectSettingsMessagesOutput {
	return o
}

func (o ProjectSettingsMessagesOutput) ToProjectSettingsMessagesPtrOutput() ProjectSettingsMessagesPtrOutput {
	return o.ToProjectSettingsMessagesPtrOutputWithContext(context.Background())
}

func (o ProjectSettingsMessagesOutput) ToProjectSettingsMessagesPtrOutputWithContext(ctx context.Context) ProjectSettingsMessagesPtrOutput {
	return o.ApplyT(func(v ProjectSettingsMessages) *ProjectSettingsMessages {
		return &v
	}).(ProjectSettingsMessagesPtrOutput)
}
func (o ProjectSettingsMessagesOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ProjectSettingsMessages) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ProjectSettingsMessagesPtrOutput struct{ *pulumi.OutputState }

func (ProjectSettingsMessagesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSettingsMessages)(nil)).Elem()
}

func (o ProjectSettingsMessagesPtrOutput) ToProjectSettingsMessagesPtrOutput() ProjectSettingsMessagesPtrOutput {
	return o
}

func (o ProjectSettingsMessagesPtrOutput) ToProjectSettingsMessagesPtrOutputWithContext(ctx context.Context) ProjectSettingsMessagesPtrOutput {
	return o
}

func (o ProjectSettingsMessagesPtrOutput) Elem() ProjectSettingsMessagesOutput {
	return o.ApplyT(func(v *ProjectSettingsMessages) ProjectSettingsMessages { return *v }).(ProjectSettingsMessagesOutput)
}

func (o ProjectSettingsMessagesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectSettingsMessages) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ShippingZoneLocation struct {
	Country string  `pulumi:"country"`
	State   *string `pulumi:"state"`
}

// ShippingZoneLocationInput is an input type that accepts ShippingZoneLocationArgs and ShippingZoneLocationOutput values.
// You can construct a concrete instance of `ShippingZoneLocationInput` via:
//
//          ShippingZoneLocationArgs{...}
type ShippingZoneLocationInput interface {
	pulumi.Input

	ToShippingZoneLocationOutput() ShippingZoneLocationOutput
	ToShippingZoneLocationOutputWithContext(context.Context) ShippingZoneLocationOutput
}

type ShippingZoneLocationArgs struct {
	Country pulumi.StringInput    `pulumi:"country"`
	State   pulumi.StringPtrInput `pulumi:"state"`
}

func (ShippingZoneLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingZoneLocation)(nil)).Elem()
}

func (i ShippingZoneLocationArgs) ToShippingZoneLocationOutput() ShippingZoneLocationOutput {
	return i.ToShippingZoneLocationOutputWithContext(context.Background())
}

func (i ShippingZoneLocationArgs) ToShippingZoneLocationOutputWithContext(ctx context.Context) ShippingZoneLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneLocationOutput)
}

// ShippingZoneLocationArrayInput is an input type that accepts ShippingZoneLocationArray and ShippingZoneLocationArrayOutput values.
// You can construct a concrete instance of `ShippingZoneLocationArrayInput` via:
//
//          ShippingZoneLocationArray{ ShippingZoneLocationArgs{...} }
type ShippingZoneLocationArrayInput interface {
	pulumi.Input

	ToShippingZoneLocationArrayOutput() ShippingZoneLocationArrayOutput
	ToShippingZoneLocationArrayOutputWithContext(context.Context) ShippingZoneLocationArrayOutput
}

type ShippingZoneLocationArray []ShippingZoneLocationInput

func (ShippingZoneLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShippingZoneLocation)(nil)).Elem()
}

func (i ShippingZoneLocationArray) ToShippingZoneLocationArrayOutput() ShippingZoneLocationArrayOutput {
	return i.ToShippingZoneLocationArrayOutputWithContext(context.Background())
}

func (i ShippingZoneLocationArray) ToShippingZoneLocationArrayOutputWithContext(ctx context.Context) ShippingZoneLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneLocationArrayOutput)
}

type ShippingZoneLocationOutput struct{ *pulumi.OutputState }

func (ShippingZoneLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingZoneLocation)(nil)).Elem()
}

func (o ShippingZoneLocationOutput) ToShippingZoneLocationOutput() ShippingZoneLocationOutput {
	return o
}

func (o ShippingZoneLocationOutput) ToShippingZoneLocationOutputWithContext(ctx context.Context) ShippingZoneLocationOutput {
	return o
}

func (o ShippingZoneLocationOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingZoneLocation) string { return v.Country }).(pulumi.StringOutput)
}

func (o ShippingZoneLocationOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingZoneLocation) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ShippingZoneLocationArrayOutput struct{ *pulumi.OutputState }

func (ShippingZoneLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShippingZoneLocation)(nil)).Elem()
}

func (o ShippingZoneLocationArrayOutput) ToShippingZoneLocationArrayOutput() ShippingZoneLocationArrayOutput {
	return o
}

func (o ShippingZoneLocationArrayOutput) ToShippingZoneLocationArrayOutputWithContext(ctx context.Context) ShippingZoneLocationArrayOutput {
	return o
}

func (o ShippingZoneLocationArrayOutput) Index(i pulumi.IntInput) ShippingZoneLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShippingZoneLocation {
		return vs[0].([]ShippingZoneLocation)[vs[1].(int)]
	}).(ShippingZoneLocationOutput)
}

type ShippingZoneRateFreeAbove struct {
	CentAmount   int    `pulumi:"centAmount"`
	CurrencyCode string `pulumi:"currencyCode"`
}

// ShippingZoneRateFreeAboveInput is an input type that accepts ShippingZoneRateFreeAboveArgs and ShippingZoneRateFreeAboveOutput values.
// You can construct a concrete instance of `ShippingZoneRateFreeAboveInput` via:
//
//          ShippingZoneRateFreeAboveArgs{...}
type ShippingZoneRateFreeAboveInput interface {
	pulumi.Input

	ToShippingZoneRateFreeAboveOutput() ShippingZoneRateFreeAboveOutput
	ToShippingZoneRateFreeAboveOutputWithContext(context.Context) ShippingZoneRateFreeAboveOutput
}

type ShippingZoneRateFreeAboveArgs struct {
	CentAmount   pulumi.IntInput    `pulumi:"centAmount"`
	CurrencyCode pulumi.StringInput `pulumi:"currencyCode"`
}

func (ShippingZoneRateFreeAboveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingZoneRateFreeAbove)(nil)).Elem()
}

func (i ShippingZoneRateFreeAboveArgs) ToShippingZoneRateFreeAboveOutput() ShippingZoneRateFreeAboveOutput {
	return i.ToShippingZoneRateFreeAboveOutputWithContext(context.Background())
}

func (i ShippingZoneRateFreeAboveArgs) ToShippingZoneRateFreeAboveOutputWithContext(ctx context.Context) ShippingZoneRateFreeAboveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneRateFreeAboveOutput)
}

func (i ShippingZoneRateFreeAboveArgs) ToShippingZoneRateFreeAbovePtrOutput() ShippingZoneRateFreeAbovePtrOutput {
	return i.ToShippingZoneRateFreeAbovePtrOutputWithContext(context.Background())
}

func (i ShippingZoneRateFreeAboveArgs) ToShippingZoneRateFreeAbovePtrOutputWithContext(ctx context.Context) ShippingZoneRateFreeAbovePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneRateFreeAboveOutput).ToShippingZoneRateFreeAbovePtrOutputWithContext(ctx)
}

// ShippingZoneRateFreeAbovePtrInput is an input type that accepts ShippingZoneRateFreeAboveArgs, ShippingZoneRateFreeAbovePtr and ShippingZoneRateFreeAbovePtrOutput values.
// You can construct a concrete instance of `ShippingZoneRateFreeAbovePtrInput` via:
//
//          ShippingZoneRateFreeAboveArgs{...}
//
//  or:
//
//          nil
type ShippingZoneRateFreeAbovePtrInput interface {
	pulumi.Input

	ToShippingZoneRateFreeAbovePtrOutput() ShippingZoneRateFreeAbovePtrOutput
	ToShippingZoneRateFreeAbovePtrOutputWithContext(context.Context) ShippingZoneRateFreeAbovePtrOutput
}

type shippingZoneRateFreeAbovePtrType ShippingZoneRateFreeAboveArgs

func ShippingZoneRateFreeAbovePtr(v *ShippingZoneRateFreeAboveArgs) ShippingZoneRateFreeAbovePtrInput {
	return (*shippingZoneRateFreeAbovePtrType)(v)
}

func (*shippingZoneRateFreeAbovePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingZoneRateFreeAbove)(nil)).Elem()
}

func (i *shippingZoneRateFreeAbovePtrType) ToShippingZoneRateFreeAbovePtrOutput() ShippingZoneRateFreeAbovePtrOutput {
	return i.ToShippingZoneRateFreeAbovePtrOutputWithContext(context.Background())
}

func (i *shippingZoneRateFreeAbovePtrType) ToShippingZoneRateFreeAbovePtrOutputWithContext(ctx context.Context) ShippingZoneRateFreeAbovePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneRateFreeAbovePtrOutput)
}

type ShippingZoneRateFreeAboveOutput struct{ *pulumi.OutputState }

func (ShippingZoneRateFreeAboveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingZoneRateFreeAbove)(nil)).Elem()
}

func (o ShippingZoneRateFreeAboveOutput) ToShippingZoneRateFreeAboveOutput() ShippingZoneRateFreeAboveOutput {
	return o
}

func (o ShippingZoneRateFreeAboveOutput) ToShippingZoneRateFreeAboveOutputWithContext(ctx context.Context) ShippingZoneRateFreeAboveOutput {
	return o
}

func (o ShippingZoneRateFreeAboveOutput) ToShippingZoneRateFreeAbovePtrOutput() ShippingZoneRateFreeAbovePtrOutput {
	return o.ToShippingZoneRateFreeAbovePtrOutputWithContext(context.Background())
}

func (o ShippingZoneRateFreeAboveOutput) ToShippingZoneRateFreeAbovePtrOutputWithContext(ctx context.Context) ShippingZoneRateFreeAbovePtrOutput {
	return o.ApplyT(func(v ShippingZoneRateFreeAbove) *ShippingZoneRateFreeAbove {
		return &v
	}).(ShippingZoneRateFreeAbovePtrOutput)
}
func (o ShippingZoneRateFreeAboveOutput) CentAmount() pulumi.IntOutput {
	return o.ApplyT(func(v ShippingZoneRateFreeAbove) int { return v.CentAmount }).(pulumi.IntOutput)
}

func (o ShippingZoneRateFreeAboveOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingZoneRateFreeAbove) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

type ShippingZoneRateFreeAbovePtrOutput struct{ *pulumi.OutputState }

func (ShippingZoneRateFreeAbovePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingZoneRateFreeAbove)(nil)).Elem()
}

func (o ShippingZoneRateFreeAbovePtrOutput) ToShippingZoneRateFreeAbovePtrOutput() ShippingZoneRateFreeAbovePtrOutput {
	return o
}

func (o ShippingZoneRateFreeAbovePtrOutput) ToShippingZoneRateFreeAbovePtrOutputWithContext(ctx context.Context) ShippingZoneRateFreeAbovePtrOutput {
	return o
}

func (o ShippingZoneRateFreeAbovePtrOutput) Elem() ShippingZoneRateFreeAboveOutput {
	return o.ApplyT(func(v *ShippingZoneRateFreeAbove) ShippingZoneRateFreeAbove { return *v }).(ShippingZoneRateFreeAboveOutput)
}

func (o ShippingZoneRateFreeAbovePtrOutput) CentAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ShippingZoneRateFreeAbove) *int {
		if v == nil {
			return nil
		}
		return &v.CentAmount
	}).(pulumi.IntPtrOutput)
}

func (o ShippingZoneRateFreeAbovePtrOutput) CurrencyCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingZoneRateFreeAbove) *string {
		if v == nil {
			return nil
		}
		return &v.CurrencyCode
	}).(pulumi.StringPtrOutput)
}

type ShippingZoneRatePrice struct {
	CentAmount   int    `pulumi:"centAmount"`
	CurrencyCode string `pulumi:"currencyCode"`
}

// ShippingZoneRatePriceInput is an input type that accepts ShippingZoneRatePriceArgs and ShippingZoneRatePriceOutput values.
// You can construct a concrete instance of `ShippingZoneRatePriceInput` via:
//
//          ShippingZoneRatePriceArgs{...}
type ShippingZoneRatePriceInput interface {
	pulumi.Input

	ToShippingZoneRatePriceOutput() ShippingZoneRatePriceOutput
	ToShippingZoneRatePriceOutputWithContext(context.Context) ShippingZoneRatePriceOutput
}

type ShippingZoneRatePriceArgs struct {
	CentAmount   pulumi.IntInput    `pulumi:"centAmount"`
	CurrencyCode pulumi.StringInput `pulumi:"currencyCode"`
}

func (ShippingZoneRatePriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingZoneRatePrice)(nil)).Elem()
}

func (i ShippingZoneRatePriceArgs) ToShippingZoneRatePriceOutput() ShippingZoneRatePriceOutput {
	return i.ToShippingZoneRatePriceOutputWithContext(context.Background())
}

func (i ShippingZoneRatePriceArgs) ToShippingZoneRatePriceOutputWithContext(ctx context.Context) ShippingZoneRatePriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneRatePriceOutput)
}

func (i ShippingZoneRatePriceArgs) ToShippingZoneRatePricePtrOutput() ShippingZoneRatePricePtrOutput {
	return i.ToShippingZoneRatePricePtrOutputWithContext(context.Background())
}

func (i ShippingZoneRatePriceArgs) ToShippingZoneRatePricePtrOutputWithContext(ctx context.Context) ShippingZoneRatePricePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneRatePriceOutput).ToShippingZoneRatePricePtrOutputWithContext(ctx)
}

// ShippingZoneRatePricePtrInput is an input type that accepts ShippingZoneRatePriceArgs, ShippingZoneRatePricePtr and ShippingZoneRatePricePtrOutput values.
// You can construct a concrete instance of `ShippingZoneRatePricePtrInput` via:
//
//          ShippingZoneRatePriceArgs{...}
//
//  or:
//
//          nil
type ShippingZoneRatePricePtrInput interface {
	pulumi.Input

	ToShippingZoneRatePricePtrOutput() ShippingZoneRatePricePtrOutput
	ToShippingZoneRatePricePtrOutputWithContext(context.Context) ShippingZoneRatePricePtrOutput
}

type shippingZoneRatePricePtrType ShippingZoneRatePriceArgs

func ShippingZoneRatePricePtr(v *ShippingZoneRatePriceArgs) ShippingZoneRatePricePtrInput {
	return (*shippingZoneRatePricePtrType)(v)
}

func (*shippingZoneRatePricePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingZoneRatePrice)(nil)).Elem()
}

func (i *shippingZoneRatePricePtrType) ToShippingZoneRatePricePtrOutput() ShippingZoneRatePricePtrOutput {
	return i.ToShippingZoneRatePricePtrOutputWithContext(context.Background())
}

func (i *shippingZoneRatePricePtrType) ToShippingZoneRatePricePtrOutputWithContext(ctx context.Context) ShippingZoneRatePricePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingZoneRatePricePtrOutput)
}

type ShippingZoneRatePriceOutput struct{ *pulumi.OutputState }

func (ShippingZoneRatePriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingZoneRatePrice)(nil)).Elem()
}

func (o ShippingZoneRatePriceOutput) ToShippingZoneRatePriceOutput() ShippingZoneRatePriceOutput {
	return o
}

func (o ShippingZoneRatePriceOutput) ToShippingZoneRatePriceOutputWithContext(ctx context.Context) ShippingZoneRatePriceOutput {
	return o
}

func (o ShippingZoneRatePriceOutput) ToShippingZoneRatePricePtrOutput() ShippingZoneRatePricePtrOutput {
	return o.ToShippingZoneRatePricePtrOutputWithContext(context.Background())
}

func (o ShippingZoneRatePriceOutput) ToShippingZoneRatePricePtrOutputWithContext(ctx context.Context) ShippingZoneRatePricePtrOutput {
	return o.ApplyT(func(v ShippingZoneRatePrice) *ShippingZoneRatePrice {
		return &v
	}).(ShippingZoneRatePricePtrOutput)
}
func (o ShippingZoneRatePriceOutput) CentAmount() pulumi.IntOutput {
	return o.ApplyT(func(v ShippingZoneRatePrice) int { return v.CentAmount }).(pulumi.IntOutput)
}

func (o ShippingZoneRatePriceOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingZoneRatePrice) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

type ShippingZoneRatePricePtrOutput struct{ *pulumi.OutputState }

func (ShippingZoneRatePricePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingZoneRatePrice)(nil)).Elem()
}

func (o ShippingZoneRatePricePtrOutput) ToShippingZoneRatePricePtrOutput() ShippingZoneRatePricePtrOutput {
	return o
}

func (o ShippingZoneRatePricePtrOutput) ToShippingZoneRatePricePtrOutputWithContext(ctx context.Context) ShippingZoneRatePricePtrOutput {
	return o
}

func (o ShippingZoneRatePricePtrOutput) Elem() ShippingZoneRatePriceOutput {
	return o.ApplyT(func(v *ShippingZoneRatePrice) ShippingZoneRatePrice { return *v }).(ShippingZoneRatePriceOutput)
}

func (o ShippingZoneRatePricePtrOutput) CentAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ShippingZoneRatePrice) *int {
		if v == nil {
			return nil
		}
		return &v.CentAmount
	}).(pulumi.IntPtrOutput)
}

func (o ShippingZoneRatePricePtrOutput) CurrencyCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingZoneRatePrice) *string {
		if v == nil {
			return nil
		}
		return &v.CurrencyCode
	}).(pulumi.StringPtrOutput)
}

type SubscriptionChange struct {
	ResourceTypeIds []string `pulumi:"resourceTypeIds"`
}

// SubscriptionChangeInput is an input type that accepts SubscriptionChangeArgs and SubscriptionChangeOutput values.
// You can construct a concrete instance of `SubscriptionChangeInput` via:
//
//          SubscriptionChangeArgs{...}
type SubscriptionChangeInput interface {
	pulumi.Input

	ToSubscriptionChangeOutput() SubscriptionChangeOutput
	ToSubscriptionChangeOutputWithContext(context.Context) SubscriptionChangeOutput
}

type SubscriptionChangeArgs struct {
	ResourceTypeIds pulumi.StringArrayInput `pulumi:"resourceTypeIds"`
}

func (SubscriptionChangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionChange)(nil)).Elem()
}

func (i SubscriptionChangeArgs) ToSubscriptionChangeOutput() SubscriptionChangeOutput {
	return i.ToSubscriptionChangeOutputWithContext(context.Background())
}

func (i SubscriptionChangeArgs) ToSubscriptionChangeOutputWithContext(ctx context.Context) SubscriptionChangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionChangeOutput)
}

// SubscriptionChangeArrayInput is an input type that accepts SubscriptionChangeArray and SubscriptionChangeArrayOutput values.
// You can construct a concrete instance of `SubscriptionChangeArrayInput` via:
//
//          SubscriptionChangeArray{ SubscriptionChangeArgs{...} }
type SubscriptionChangeArrayInput interface {
	pulumi.Input

	ToSubscriptionChangeArrayOutput() SubscriptionChangeArrayOutput
	ToSubscriptionChangeArrayOutputWithContext(context.Context) SubscriptionChangeArrayOutput
}

type SubscriptionChangeArray []SubscriptionChangeInput

func (SubscriptionChangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionChange)(nil)).Elem()
}

func (i SubscriptionChangeArray) ToSubscriptionChangeArrayOutput() SubscriptionChangeArrayOutput {
	return i.ToSubscriptionChangeArrayOutputWithContext(context.Background())
}

func (i SubscriptionChangeArray) ToSubscriptionChangeArrayOutputWithContext(ctx context.Context) SubscriptionChangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionChangeArrayOutput)
}

type SubscriptionChangeOutput struct{ *pulumi.OutputState }

func (SubscriptionChangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionChange)(nil)).Elem()
}

func (o SubscriptionChangeOutput) ToSubscriptionChangeOutput() SubscriptionChangeOutput {
	return o
}

func (o SubscriptionChangeOutput) ToSubscriptionChangeOutputWithContext(ctx context.Context) SubscriptionChangeOutput {
	return o
}

func (o SubscriptionChangeOutput) ResourceTypeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubscriptionChange) []string { return v.ResourceTypeIds }).(pulumi.StringArrayOutput)
}

type SubscriptionChangeArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionChangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionChange)(nil)).Elem()
}

func (o SubscriptionChangeArrayOutput) ToSubscriptionChangeArrayOutput() SubscriptionChangeArrayOutput {
	return o
}

func (o SubscriptionChangeArrayOutput) ToSubscriptionChangeArrayOutputWithContext(ctx context.Context) SubscriptionChangeArrayOutput {
	return o
}

func (o SubscriptionChangeArrayOutput) Index(i pulumi.IntInput) SubscriptionChangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionChange {
		return vs[0].([]SubscriptionChange)[vs[1].(int)]
	}).(SubscriptionChangeOutput)
}

type SubscriptionDestination struct {
	AccessKey        *string `pulumi:"accessKey"`
	AccessSecret     *string `pulumi:"accessSecret"`
	ConnectionString *string `pulumi:"connectionString"`
	ProjectId        *string `pulumi:"projectId"`
	QueueUrl         *string `pulumi:"queueUrl"`
	Region           string  `pulumi:"region"`
	Topic            *string `pulumi:"topic"`
	TopicArn         *string `pulumi:"topicArn"`
	Type             string  `pulumi:"type"`
	Uri              string  `pulumi:"uri"`
}

// SubscriptionDestinationInput is an input type that accepts SubscriptionDestinationArgs and SubscriptionDestinationOutput values.
// You can construct a concrete instance of `SubscriptionDestinationInput` via:
//
//          SubscriptionDestinationArgs{...}
type SubscriptionDestinationInput interface {
	pulumi.Input

	ToSubscriptionDestinationOutput() SubscriptionDestinationOutput
	ToSubscriptionDestinationOutputWithContext(context.Context) SubscriptionDestinationOutput
}

type SubscriptionDestinationArgs struct {
	AccessKey        pulumi.StringPtrInput `pulumi:"accessKey"`
	AccessSecret     pulumi.StringPtrInput `pulumi:"accessSecret"`
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	ProjectId        pulumi.StringPtrInput `pulumi:"projectId"`
	QueueUrl         pulumi.StringPtrInput `pulumi:"queueUrl"`
	Region           pulumi.StringInput    `pulumi:"region"`
	Topic            pulumi.StringPtrInput `pulumi:"topic"`
	TopicArn         pulumi.StringPtrInput `pulumi:"topicArn"`
	Type             pulumi.StringInput    `pulumi:"type"`
	Uri              pulumi.StringInput    `pulumi:"uri"`
}

func (SubscriptionDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionDestination)(nil)).Elem()
}

func (i SubscriptionDestinationArgs) ToSubscriptionDestinationOutput() SubscriptionDestinationOutput {
	return i.ToSubscriptionDestinationOutputWithContext(context.Background())
}

func (i SubscriptionDestinationArgs) ToSubscriptionDestinationOutputWithContext(ctx context.Context) SubscriptionDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionDestinationOutput)
}

func (i SubscriptionDestinationArgs) ToSubscriptionDestinationPtrOutput() SubscriptionDestinationPtrOutput {
	return i.ToSubscriptionDestinationPtrOutputWithContext(context.Background())
}

func (i SubscriptionDestinationArgs) ToSubscriptionDestinationPtrOutputWithContext(ctx context.Context) SubscriptionDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionDestinationOutput).ToSubscriptionDestinationPtrOutputWithContext(ctx)
}

// SubscriptionDestinationPtrInput is an input type that accepts SubscriptionDestinationArgs, SubscriptionDestinationPtr and SubscriptionDestinationPtrOutput values.
// You can construct a concrete instance of `SubscriptionDestinationPtrInput` via:
//
//          SubscriptionDestinationArgs{...}
//
//  or:
//
//          nil
type SubscriptionDestinationPtrInput interface {
	pulumi.Input

	ToSubscriptionDestinationPtrOutput() SubscriptionDestinationPtrOutput
	ToSubscriptionDestinationPtrOutputWithContext(context.Context) SubscriptionDestinationPtrOutput
}

type subscriptionDestinationPtrType SubscriptionDestinationArgs

func SubscriptionDestinationPtr(v *SubscriptionDestinationArgs) SubscriptionDestinationPtrInput {
	return (*subscriptionDestinationPtrType)(v)
}

func (*subscriptionDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionDestination)(nil)).Elem()
}

func (i *subscriptionDestinationPtrType) ToSubscriptionDestinationPtrOutput() SubscriptionDestinationPtrOutput {
	return i.ToSubscriptionDestinationPtrOutputWithContext(context.Background())
}

func (i *subscriptionDestinationPtrType) ToSubscriptionDestinationPtrOutputWithContext(ctx context.Context) SubscriptionDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionDestinationPtrOutput)
}

type SubscriptionDestinationOutput struct{ *pulumi.OutputState }

func (SubscriptionDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionDestination)(nil)).Elem()
}

func (o SubscriptionDestinationOutput) ToSubscriptionDestinationOutput() SubscriptionDestinationOutput {
	return o
}

func (o SubscriptionDestinationOutput) ToSubscriptionDestinationOutputWithContext(ctx context.Context) SubscriptionDestinationOutput {
	return o
}

func (o SubscriptionDestinationOutput) ToSubscriptionDestinationPtrOutput() SubscriptionDestinationPtrOutput {
	return o.ToSubscriptionDestinationPtrOutputWithContext(context.Background())
}

func (o SubscriptionDestinationOutput) ToSubscriptionDestinationPtrOutputWithContext(ctx context.Context) SubscriptionDestinationPtrOutput {
	return o.ApplyT(func(v SubscriptionDestination) *SubscriptionDestination {
		return &v
	}).(SubscriptionDestinationPtrOutput)
}
func (o SubscriptionDestinationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionDestination) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o SubscriptionDestinationOutput) AccessSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionDestination) *string { return v.AccessSecret }).(pulumi.StringPtrOutput)
}

func (o SubscriptionDestinationOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionDestination) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

func (o SubscriptionDestinationOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionDestination) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o SubscriptionDestinationOutput) QueueUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionDestination) *string { return v.QueueUrl }).(pulumi.StringPtrOutput)
}

func (o SubscriptionDestinationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionDestination) string { return v.Region }).(pulumi.StringOutput)
}

func (o SubscriptionDestinationOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionDestination) *string { return v.Topic }).(pulumi.StringPtrOutput)
}

func (o SubscriptionDestinationOutput) TopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionDestination) *string { return v.TopicArn }).(pulumi.StringPtrOutput)
}

func (o SubscriptionDestinationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionDestination) string { return v.Type }).(pulumi.StringOutput)
}

func (o SubscriptionDestinationOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionDestination) string { return v.Uri }).(pulumi.StringOutput)
}

type SubscriptionDestinationPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionDestination)(nil)).Elem()
}

func (o SubscriptionDestinationPtrOutput) ToSubscriptionDestinationPtrOutput() SubscriptionDestinationPtrOutput {
	return o
}

func (o SubscriptionDestinationPtrOutput) ToSubscriptionDestinationPtrOutputWithContext(ctx context.Context) SubscriptionDestinationPtrOutput {
	return o
}

func (o SubscriptionDestinationPtrOutput) Elem() SubscriptionDestinationOutput {
	return o.ApplyT(func(v *SubscriptionDestination) SubscriptionDestination { return *v }).(SubscriptionDestinationOutput)
}

func (o SubscriptionDestinationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o SubscriptionDestinationPtrOutput) AccessSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return v.AccessSecret
	}).(pulumi.StringPtrOutput)
}

func (o SubscriptionDestinationPtrOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionString
	}).(pulumi.StringPtrOutput)
}

func (o SubscriptionDestinationPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

func (o SubscriptionDestinationPtrOutput) QueueUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return v.QueueUrl
	}).(pulumi.StringPtrOutput)
}

func (o SubscriptionDestinationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

func (o SubscriptionDestinationPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return v.Topic
	}).(pulumi.StringPtrOutput)
}

func (o SubscriptionDestinationPtrOutput) TopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return v.TopicArn
	}).(pulumi.StringPtrOutput)
}

func (o SubscriptionDestinationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o SubscriptionDestinationPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionDestination) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

type SubscriptionFormat struct {
	CloudEventsVersion *string `pulumi:"cloudEventsVersion"`
	Type               string  `pulumi:"type"`
}

// SubscriptionFormatInput is an input type that accepts SubscriptionFormatArgs and SubscriptionFormatOutput values.
// You can construct a concrete instance of `SubscriptionFormatInput` via:
//
//          SubscriptionFormatArgs{...}
type SubscriptionFormatInput interface {
	pulumi.Input

	ToSubscriptionFormatOutput() SubscriptionFormatOutput
	ToSubscriptionFormatOutputWithContext(context.Context) SubscriptionFormatOutput
}

type SubscriptionFormatArgs struct {
	CloudEventsVersion pulumi.StringPtrInput `pulumi:"cloudEventsVersion"`
	Type               pulumi.StringInput    `pulumi:"type"`
}

func (SubscriptionFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionFormat)(nil)).Elem()
}

func (i SubscriptionFormatArgs) ToSubscriptionFormatOutput() SubscriptionFormatOutput {
	return i.ToSubscriptionFormatOutputWithContext(context.Background())
}

func (i SubscriptionFormatArgs) ToSubscriptionFormatOutputWithContext(ctx context.Context) SubscriptionFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionFormatOutput)
}

func (i SubscriptionFormatArgs) ToSubscriptionFormatPtrOutput() SubscriptionFormatPtrOutput {
	return i.ToSubscriptionFormatPtrOutputWithContext(context.Background())
}

func (i SubscriptionFormatArgs) ToSubscriptionFormatPtrOutputWithContext(ctx context.Context) SubscriptionFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionFormatOutput).ToSubscriptionFormatPtrOutputWithContext(ctx)
}

// SubscriptionFormatPtrInput is an input type that accepts SubscriptionFormatArgs, SubscriptionFormatPtr and SubscriptionFormatPtrOutput values.
// You can construct a concrete instance of `SubscriptionFormatPtrInput` via:
//
//          SubscriptionFormatArgs{...}
//
//  or:
//
//          nil
type SubscriptionFormatPtrInput interface {
	pulumi.Input

	ToSubscriptionFormatPtrOutput() SubscriptionFormatPtrOutput
	ToSubscriptionFormatPtrOutputWithContext(context.Context) SubscriptionFormatPtrOutput
}

type subscriptionFormatPtrType SubscriptionFormatArgs

func SubscriptionFormatPtr(v *SubscriptionFormatArgs) SubscriptionFormatPtrInput {
	return (*subscriptionFormatPtrType)(v)
}

func (*subscriptionFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionFormat)(nil)).Elem()
}

func (i *subscriptionFormatPtrType) ToSubscriptionFormatPtrOutput() SubscriptionFormatPtrOutput {
	return i.ToSubscriptionFormatPtrOutputWithContext(context.Background())
}

func (i *subscriptionFormatPtrType) ToSubscriptionFormatPtrOutputWithContext(ctx context.Context) SubscriptionFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionFormatPtrOutput)
}

type SubscriptionFormatOutput struct{ *pulumi.OutputState }

func (SubscriptionFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionFormat)(nil)).Elem()
}

func (o SubscriptionFormatOutput) ToSubscriptionFormatOutput() SubscriptionFormatOutput {
	return o
}

func (o SubscriptionFormatOutput) ToSubscriptionFormatOutputWithContext(ctx context.Context) SubscriptionFormatOutput {
	return o
}

func (o SubscriptionFormatOutput) ToSubscriptionFormatPtrOutput() SubscriptionFormatPtrOutput {
	return o.ToSubscriptionFormatPtrOutputWithContext(context.Background())
}

func (o SubscriptionFormatOutput) ToSubscriptionFormatPtrOutputWithContext(ctx context.Context) SubscriptionFormatPtrOutput {
	return o.ApplyT(func(v SubscriptionFormat) *SubscriptionFormat {
		return &v
	}).(SubscriptionFormatPtrOutput)
}
func (o SubscriptionFormatOutput) CloudEventsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionFormat) *string { return v.CloudEventsVersion }).(pulumi.StringPtrOutput)
}

func (o SubscriptionFormatOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionFormat) string { return v.Type }).(pulumi.StringOutput)
}

type SubscriptionFormatPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionFormat)(nil)).Elem()
}

func (o SubscriptionFormatPtrOutput) ToSubscriptionFormatPtrOutput() SubscriptionFormatPtrOutput {
	return o
}

func (o SubscriptionFormatPtrOutput) ToSubscriptionFormatPtrOutputWithContext(ctx context.Context) SubscriptionFormatPtrOutput {
	return o
}

func (o SubscriptionFormatPtrOutput) Elem() SubscriptionFormatOutput {
	return o.ApplyT(func(v *SubscriptionFormat) SubscriptionFormat { return *v }).(SubscriptionFormatOutput)
}

func (o SubscriptionFormatPtrOutput) CloudEventsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionFormat) *string {
		if v == nil {
			return nil
		}
		return v.CloudEventsVersion
	}).(pulumi.StringPtrOutput)
}

func (o SubscriptionFormatPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionFormat) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type SubscriptionMessage struct {
	ResourceTypeId *string  `pulumi:"resourceTypeId"`
	Types          []string `pulumi:"types"`
}

// SubscriptionMessageInput is an input type that accepts SubscriptionMessageArgs and SubscriptionMessageOutput values.
// You can construct a concrete instance of `SubscriptionMessageInput` via:
//
//          SubscriptionMessageArgs{...}
type SubscriptionMessageInput interface {
	pulumi.Input

	ToSubscriptionMessageOutput() SubscriptionMessageOutput
	ToSubscriptionMessageOutputWithContext(context.Context) SubscriptionMessageOutput
}

type SubscriptionMessageArgs struct {
	ResourceTypeId pulumi.StringPtrInput   `pulumi:"resourceTypeId"`
	Types          pulumi.StringArrayInput `pulumi:"types"`
}

func (SubscriptionMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionMessage)(nil)).Elem()
}

func (i SubscriptionMessageArgs) ToSubscriptionMessageOutput() SubscriptionMessageOutput {
	return i.ToSubscriptionMessageOutputWithContext(context.Background())
}

func (i SubscriptionMessageArgs) ToSubscriptionMessageOutputWithContext(ctx context.Context) SubscriptionMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionMessageOutput)
}

// SubscriptionMessageArrayInput is an input type that accepts SubscriptionMessageArray and SubscriptionMessageArrayOutput values.
// You can construct a concrete instance of `SubscriptionMessageArrayInput` via:
//
//          SubscriptionMessageArray{ SubscriptionMessageArgs{...} }
type SubscriptionMessageArrayInput interface {
	pulumi.Input

	ToSubscriptionMessageArrayOutput() SubscriptionMessageArrayOutput
	ToSubscriptionMessageArrayOutputWithContext(context.Context) SubscriptionMessageArrayOutput
}

type SubscriptionMessageArray []SubscriptionMessageInput

func (SubscriptionMessageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionMessage)(nil)).Elem()
}

func (i SubscriptionMessageArray) ToSubscriptionMessageArrayOutput() SubscriptionMessageArrayOutput {
	return i.ToSubscriptionMessageArrayOutputWithContext(context.Background())
}

func (i SubscriptionMessageArray) ToSubscriptionMessageArrayOutputWithContext(ctx context.Context) SubscriptionMessageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionMessageArrayOutput)
}

type SubscriptionMessageOutput struct{ *pulumi.OutputState }

func (SubscriptionMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionMessage)(nil)).Elem()
}

func (o SubscriptionMessageOutput) ToSubscriptionMessageOutput() SubscriptionMessageOutput {
	return o
}

func (o SubscriptionMessageOutput) ToSubscriptionMessageOutputWithContext(ctx context.Context) SubscriptionMessageOutput {
	return o
}

func (o SubscriptionMessageOutput) ResourceTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionMessage) *string { return v.ResourceTypeId }).(pulumi.StringPtrOutput)
}

func (o SubscriptionMessageOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubscriptionMessage) []string { return v.Types }).(pulumi.StringArrayOutput)
}

type SubscriptionMessageArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionMessageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionMessage)(nil)).Elem()
}

func (o SubscriptionMessageArrayOutput) ToSubscriptionMessageArrayOutput() SubscriptionMessageArrayOutput {
	return o
}

func (o SubscriptionMessageArrayOutput) ToSubscriptionMessageArrayOutputWithContext(ctx context.Context) SubscriptionMessageArrayOutput {
	return o
}

func (o SubscriptionMessageArrayOutput) Index(i pulumi.IntInput) SubscriptionMessageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionMessage {
		return vs[0].([]SubscriptionMessage)[vs[1].(int)]
	}).(SubscriptionMessageOutput)
}

type TaxCategoryRateSubRate struct {
	Amount float64 `pulumi:"amount"`
	Name   string  `pulumi:"name"`
}

// TaxCategoryRateSubRateInput is an input type that accepts TaxCategoryRateSubRateArgs and TaxCategoryRateSubRateOutput values.
// You can construct a concrete instance of `TaxCategoryRateSubRateInput` via:
//
//          TaxCategoryRateSubRateArgs{...}
type TaxCategoryRateSubRateInput interface {
	pulumi.Input

	ToTaxCategoryRateSubRateOutput() TaxCategoryRateSubRateOutput
	ToTaxCategoryRateSubRateOutputWithContext(context.Context) TaxCategoryRateSubRateOutput
}

type TaxCategoryRateSubRateArgs struct {
	Amount pulumi.Float64Input `pulumi:"amount"`
	Name   pulumi.StringInput  `pulumi:"name"`
}

func (TaxCategoryRateSubRateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaxCategoryRateSubRate)(nil)).Elem()
}

func (i TaxCategoryRateSubRateArgs) ToTaxCategoryRateSubRateOutput() TaxCategoryRateSubRateOutput {
	return i.ToTaxCategoryRateSubRateOutputWithContext(context.Background())
}

func (i TaxCategoryRateSubRateArgs) ToTaxCategoryRateSubRateOutputWithContext(ctx context.Context) TaxCategoryRateSubRateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaxCategoryRateSubRateOutput)
}

// TaxCategoryRateSubRateArrayInput is an input type that accepts TaxCategoryRateSubRateArray and TaxCategoryRateSubRateArrayOutput values.
// You can construct a concrete instance of `TaxCategoryRateSubRateArrayInput` via:
//
//          TaxCategoryRateSubRateArray{ TaxCategoryRateSubRateArgs{...} }
type TaxCategoryRateSubRateArrayInput interface {
	pulumi.Input

	ToTaxCategoryRateSubRateArrayOutput() TaxCategoryRateSubRateArrayOutput
	ToTaxCategoryRateSubRateArrayOutputWithContext(context.Context) TaxCategoryRateSubRateArrayOutput
}

type TaxCategoryRateSubRateArray []TaxCategoryRateSubRateInput

func (TaxCategoryRateSubRateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaxCategoryRateSubRate)(nil)).Elem()
}

func (i TaxCategoryRateSubRateArray) ToTaxCategoryRateSubRateArrayOutput() TaxCategoryRateSubRateArrayOutput {
	return i.ToTaxCategoryRateSubRateArrayOutputWithContext(context.Background())
}

func (i TaxCategoryRateSubRateArray) ToTaxCategoryRateSubRateArrayOutputWithContext(ctx context.Context) TaxCategoryRateSubRateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaxCategoryRateSubRateArrayOutput)
}

type TaxCategoryRateSubRateOutput struct{ *pulumi.OutputState }

func (TaxCategoryRateSubRateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaxCategoryRateSubRate)(nil)).Elem()
}

func (o TaxCategoryRateSubRateOutput) ToTaxCategoryRateSubRateOutput() TaxCategoryRateSubRateOutput {
	return o
}

func (o TaxCategoryRateSubRateOutput) ToTaxCategoryRateSubRateOutputWithContext(ctx context.Context) TaxCategoryRateSubRateOutput {
	return o
}

func (o TaxCategoryRateSubRateOutput) Amount() pulumi.Float64Output {
	return o.ApplyT(func(v TaxCategoryRateSubRate) float64 { return v.Amount }).(pulumi.Float64Output)
}

func (o TaxCategoryRateSubRateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TaxCategoryRateSubRate) string { return v.Name }).(pulumi.StringOutput)
}

type TaxCategoryRateSubRateArrayOutput struct{ *pulumi.OutputState }

func (TaxCategoryRateSubRateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaxCategoryRateSubRate)(nil)).Elem()
}

func (o TaxCategoryRateSubRateArrayOutput) ToTaxCategoryRateSubRateArrayOutput() TaxCategoryRateSubRateArrayOutput {
	return o
}

func (o TaxCategoryRateSubRateArrayOutput) ToTaxCategoryRateSubRateArrayOutputWithContext(ctx context.Context) TaxCategoryRateSubRateArrayOutput {
	return o
}

func (o TaxCategoryRateSubRateArrayOutput) Index(i pulumi.IntInput) TaxCategoryRateSubRateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaxCategoryRateSubRate {
		return vs[0].([]TaxCategoryRateSubRate)[vs[1].(int)]
	}).(TaxCategoryRateSubRateOutput)
}

type TypeField struct {
	InputHint *string                `pulumi:"inputHint"`
	Label     map[string]interface{} `pulumi:"label"`
	Name      string                 `pulumi:"name"`
	Required  *bool                  `pulumi:"required"`
	Type      TypeFieldType          `pulumi:"type"`
}

// TypeFieldInput is an input type that accepts TypeFieldArgs and TypeFieldOutput values.
// You can construct a concrete instance of `TypeFieldInput` via:
//
//          TypeFieldArgs{...}
type TypeFieldInput interface {
	pulumi.Input

	ToTypeFieldOutput() TypeFieldOutput
	ToTypeFieldOutputWithContext(context.Context) TypeFieldOutput
}

type TypeFieldArgs struct {
	InputHint pulumi.StringPtrInput `pulumi:"inputHint"`
	Label     pulumi.MapInput       `pulumi:"label"`
	Name      pulumi.StringInput    `pulumi:"name"`
	Required  pulumi.BoolPtrInput   `pulumi:"required"`
	Type      TypeFieldTypeInput    `pulumi:"type"`
}

func (TypeFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeField)(nil)).Elem()
}

func (i TypeFieldArgs) ToTypeFieldOutput() TypeFieldOutput {
	return i.ToTypeFieldOutputWithContext(context.Background())
}

func (i TypeFieldArgs) ToTypeFieldOutputWithContext(ctx context.Context) TypeFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldOutput)
}

// TypeFieldArrayInput is an input type that accepts TypeFieldArray and TypeFieldArrayOutput values.
// You can construct a concrete instance of `TypeFieldArrayInput` via:
//
//          TypeFieldArray{ TypeFieldArgs{...} }
type TypeFieldArrayInput interface {
	pulumi.Input

	ToTypeFieldArrayOutput() TypeFieldArrayOutput
	ToTypeFieldArrayOutputWithContext(context.Context) TypeFieldArrayOutput
}

type TypeFieldArray []TypeFieldInput

func (TypeFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TypeField)(nil)).Elem()
}

func (i TypeFieldArray) ToTypeFieldArrayOutput() TypeFieldArrayOutput {
	return i.ToTypeFieldArrayOutputWithContext(context.Background())
}

func (i TypeFieldArray) ToTypeFieldArrayOutputWithContext(ctx context.Context) TypeFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldArrayOutput)
}

type TypeFieldOutput struct{ *pulumi.OutputState }

func (TypeFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeField)(nil)).Elem()
}

func (o TypeFieldOutput) ToTypeFieldOutput() TypeFieldOutput {
	return o
}

func (o TypeFieldOutput) ToTypeFieldOutputWithContext(ctx context.Context) TypeFieldOutput {
	return o
}

func (o TypeFieldOutput) InputHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TypeField) *string { return v.InputHint }).(pulumi.StringPtrOutput)
}

func (o TypeFieldOutput) Label() pulumi.MapOutput {
	return o.ApplyT(func(v TypeField) map[string]interface{} { return v.Label }).(pulumi.MapOutput)
}

func (o TypeFieldOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TypeField) string { return v.Name }).(pulumi.StringOutput)
}

func (o TypeFieldOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TypeField) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

func (o TypeFieldOutput) Type() TypeFieldTypeOutput {
	return o.ApplyT(func(v TypeField) TypeFieldType { return v.Type }).(TypeFieldTypeOutput)
}

type TypeFieldArrayOutput struct{ *pulumi.OutputState }

func (TypeFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TypeField)(nil)).Elem()
}

func (o TypeFieldArrayOutput) ToTypeFieldArrayOutput() TypeFieldArrayOutput {
	return o
}

func (o TypeFieldArrayOutput) ToTypeFieldArrayOutputWithContext(ctx context.Context) TypeFieldArrayOutput {
	return o
}

func (o TypeFieldArrayOutput) Index(i pulumi.IntInput) TypeFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TypeField {
		return vs[0].([]TypeField)[vs[1].(int)]
	}).(TypeFieldOutput)
}

type TypeFieldType struct {
	ElementType2    *TypeFieldTypeElementType2    `pulumi:"ElementType2"`
	LocalizedValues []TypeFieldTypeLocalizedValue `pulumi:"localizedValues"`
	Name            string                        `pulumi:"name"`
	ReferenceTypeId *string                       `pulumi:"referenceTypeId"`
	Values          map[string]interface{}        `pulumi:"values"`
}

// TypeFieldTypeInput is an input type that accepts TypeFieldTypeArgs and TypeFieldTypeOutput values.
// You can construct a concrete instance of `TypeFieldTypeInput` via:
//
//          TypeFieldTypeArgs{...}
type TypeFieldTypeInput interface {
	pulumi.Input

	ToTypeFieldTypeOutput() TypeFieldTypeOutput
	ToTypeFieldTypeOutputWithContext(context.Context) TypeFieldTypeOutput
}

type TypeFieldTypeArgs struct {
	ElementType2    TypeFieldTypeElementType2PtrInput     `pulumi:"ElementType2"`
	LocalizedValues TypeFieldTypeLocalizedValueArrayInput `pulumi:"localizedValues"`
	Name            pulumi.StringInput                    `pulumi:"name"`
	ReferenceTypeId pulumi.StringPtrInput                 `pulumi:"referenceTypeId"`
	Values          pulumi.MapInput                       `pulumi:"values"`
}

func (TypeFieldTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeFieldType)(nil)).Elem()
}

func (i TypeFieldTypeArgs) ToTypeFieldTypeOutput() TypeFieldTypeOutput {
	return i.ToTypeFieldTypeOutputWithContext(context.Background())
}

func (i TypeFieldTypeArgs) ToTypeFieldTypeOutputWithContext(ctx context.Context) TypeFieldTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldTypeOutput)
}

type TypeFieldTypeOutput struct{ *pulumi.OutputState }

func (TypeFieldTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeFieldType)(nil)).Elem()
}

func (o TypeFieldTypeOutput) ToTypeFieldTypeOutput() TypeFieldTypeOutput {
	return o
}

func (o TypeFieldTypeOutput) ToTypeFieldTypeOutputWithContext(ctx context.Context) TypeFieldTypeOutput {
	return o
}

func (o TypeFieldTypeOutput) ElementType2() TypeFieldTypeElementType2PtrOutput {
	return o.ApplyT(func(v TypeFieldType) *TypeFieldTypeElementType2 { return v.ElementType2 }).(TypeFieldTypeElementType2PtrOutput)
}

func (o TypeFieldTypeOutput) LocalizedValues() TypeFieldTypeLocalizedValueArrayOutput {
	return o.ApplyT(func(v TypeFieldType) []TypeFieldTypeLocalizedValue { return v.LocalizedValues }).(TypeFieldTypeLocalizedValueArrayOutput)
}

func (o TypeFieldTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TypeFieldType) string { return v.Name }).(pulumi.StringOutput)
}

func (o TypeFieldTypeOutput) ReferenceTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TypeFieldType) *string { return v.ReferenceTypeId }).(pulumi.StringPtrOutput)
}

func (o TypeFieldTypeOutput) Values() pulumi.MapOutput {
	return o.ApplyT(func(v TypeFieldType) map[string]interface{} { return v.Values }).(pulumi.MapOutput)
}

type TypeFieldTypeElementType2 struct {
	LocalizedValues []TypeFieldTypeElementType2LocalizedValue `pulumi:"localizedValues"`
	Name            string                                    `pulumi:"name"`
	ReferenceTypeId *string                                   `pulumi:"referenceTypeId"`
	Values          map[string]interface{}                    `pulumi:"values"`
}

// TypeFieldTypeElementType2Input is an input type that accepts TypeFieldTypeElementType2Args and TypeFieldTypeElementType2Output values.
// You can construct a concrete instance of `TypeFieldTypeElementType2Input` via:
//
//          TypeFieldTypeElementType2Args{...}
type TypeFieldTypeElementType2Input interface {
	pulumi.Input

	ToTypeFieldTypeElementType2Output() TypeFieldTypeElementType2Output
	ToTypeFieldTypeElementType2OutputWithContext(context.Context) TypeFieldTypeElementType2Output
}

type TypeFieldTypeElementType2Args struct {
	LocalizedValues TypeFieldTypeElementType2LocalizedValueArrayInput `pulumi:"localizedValues"`
	Name            pulumi.StringInput                                `pulumi:"name"`
	ReferenceTypeId pulumi.StringPtrInput                             `pulumi:"referenceTypeId"`
	Values          pulumi.MapInput                                   `pulumi:"values"`
}

func (TypeFieldTypeElementType2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeFieldTypeElementType2)(nil)).Elem()
}

func (i TypeFieldTypeElementType2Args) ToTypeFieldTypeElementType2Output() TypeFieldTypeElementType2Output {
	return i.ToTypeFieldTypeElementType2OutputWithContext(context.Background())
}

func (i TypeFieldTypeElementType2Args) ToTypeFieldTypeElementType2OutputWithContext(ctx context.Context) TypeFieldTypeElementType2Output {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldTypeElementType2Output)
}

func (i TypeFieldTypeElementType2Args) ToTypeFieldTypeElementType2PtrOutput() TypeFieldTypeElementType2PtrOutput {
	return i.ToTypeFieldTypeElementType2PtrOutputWithContext(context.Background())
}

func (i TypeFieldTypeElementType2Args) ToTypeFieldTypeElementType2PtrOutputWithContext(ctx context.Context) TypeFieldTypeElementType2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldTypeElementType2Output).ToTypeFieldTypeElementType2PtrOutputWithContext(ctx)
}

// TypeFieldTypeElementType2PtrInput is an input type that accepts TypeFieldTypeElementType2Args, TypeFieldTypeElementType2Ptr and TypeFieldTypeElementType2PtrOutput values.
// You can construct a concrete instance of `TypeFieldTypeElementType2PtrInput` via:
//
//          TypeFieldTypeElementType2Args{...}
//
//  or:
//
//          nil
type TypeFieldTypeElementType2PtrInput interface {
	pulumi.Input

	ToTypeFieldTypeElementType2PtrOutput() TypeFieldTypeElementType2PtrOutput
	ToTypeFieldTypeElementType2PtrOutputWithContext(context.Context) TypeFieldTypeElementType2PtrOutput
}

type typeFieldTypeElementType2PtrType TypeFieldTypeElementType2Args

func TypeFieldTypeElementType2Ptr(v *TypeFieldTypeElementType2Args) TypeFieldTypeElementType2PtrInput {
	return (*typeFieldTypeElementType2PtrType)(v)
}

func (*typeFieldTypeElementType2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TypeFieldTypeElementType2)(nil)).Elem()
}

func (i *typeFieldTypeElementType2PtrType) ToTypeFieldTypeElementType2PtrOutput() TypeFieldTypeElementType2PtrOutput {
	return i.ToTypeFieldTypeElementType2PtrOutputWithContext(context.Background())
}

func (i *typeFieldTypeElementType2PtrType) ToTypeFieldTypeElementType2PtrOutputWithContext(ctx context.Context) TypeFieldTypeElementType2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldTypeElementType2PtrOutput)
}

type TypeFieldTypeElementType2Output struct{ *pulumi.OutputState }

func (TypeFieldTypeElementType2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeFieldTypeElementType2)(nil)).Elem()
}

func (o TypeFieldTypeElementType2Output) ToTypeFieldTypeElementType2Output() TypeFieldTypeElementType2Output {
	return o
}

func (o TypeFieldTypeElementType2Output) ToTypeFieldTypeElementType2OutputWithContext(ctx context.Context) TypeFieldTypeElementType2Output {
	return o
}

func (o TypeFieldTypeElementType2Output) ToTypeFieldTypeElementType2PtrOutput() TypeFieldTypeElementType2PtrOutput {
	return o.ToTypeFieldTypeElementType2PtrOutputWithContext(context.Background())
}

func (o TypeFieldTypeElementType2Output) ToTypeFieldTypeElementType2PtrOutputWithContext(ctx context.Context) TypeFieldTypeElementType2PtrOutput {
	return o.ApplyT(func(v TypeFieldTypeElementType2) *TypeFieldTypeElementType2 {
		return &v
	}).(TypeFieldTypeElementType2PtrOutput)
}
func (o TypeFieldTypeElementType2Output) LocalizedValues() TypeFieldTypeElementType2LocalizedValueArrayOutput {
	return o.ApplyT(func(v TypeFieldTypeElementType2) []TypeFieldTypeElementType2LocalizedValue { return v.LocalizedValues }).(TypeFieldTypeElementType2LocalizedValueArrayOutput)
}

func (o TypeFieldTypeElementType2Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TypeFieldTypeElementType2) string { return v.Name }).(pulumi.StringOutput)
}

func (o TypeFieldTypeElementType2Output) ReferenceTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TypeFieldTypeElementType2) *string { return v.ReferenceTypeId }).(pulumi.StringPtrOutput)
}

func (o TypeFieldTypeElementType2Output) Values() pulumi.MapOutput {
	return o.ApplyT(func(v TypeFieldTypeElementType2) map[string]interface{} { return v.Values }).(pulumi.MapOutput)
}

type TypeFieldTypeElementType2PtrOutput struct{ *pulumi.OutputState }

func (TypeFieldTypeElementType2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TypeFieldTypeElementType2)(nil)).Elem()
}

func (o TypeFieldTypeElementType2PtrOutput) ToTypeFieldTypeElementType2PtrOutput() TypeFieldTypeElementType2PtrOutput {
	return o
}

func (o TypeFieldTypeElementType2PtrOutput) ToTypeFieldTypeElementType2PtrOutputWithContext(ctx context.Context) TypeFieldTypeElementType2PtrOutput {
	return o
}

func (o TypeFieldTypeElementType2PtrOutput) Elem() TypeFieldTypeElementType2Output {
	return o.ApplyT(func(v *TypeFieldTypeElementType2) TypeFieldTypeElementType2 { return *v }).(TypeFieldTypeElementType2Output)
}

func (o TypeFieldTypeElementType2PtrOutput) LocalizedValues() TypeFieldTypeElementType2LocalizedValueArrayOutput {
	return o.ApplyT(func(v *TypeFieldTypeElementType2) []TypeFieldTypeElementType2LocalizedValue {
		if v == nil {
			return nil
		}
		return v.LocalizedValues
	}).(TypeFieldTypeElementType2LocalizedValueArrayOutput)
}

func (o TypeFieldTypeElementType2PtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TypeFieldTypeElementType2) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o TypeFieldTypeElementType2PtrOutput) ReferenceTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TypeFieldTypeElementType2) *string {
		if v == nil {
			return nil
		}
		return v.ReferenceTypeId
	}).(pulumi.StringPtrOutput)
}

func (o TypeFieldTypeElementType2PtrOutput) Values() pulumi.MapOutput {
	return o.ApplyT(func(v *TypeFieldTypeElementType2) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.MapOutput)
}

type TypeFieldTypeElementType2LocalizedValue struct {
	Key   string                 `pulumi:"key"`
	Label map[string]interface{} `pulumi:"label"`
}

// TypeFieldTypeElementType2LocalizedValueInput is an input type that accepts TypeFieldTypeElementType2LocalizedValueArgs and TypeFieldTypeElementType2LocalizedValueOutput values.
// You can construct a concrete instance of `TypeFieldTypeElementType2LocalizedValueInput` via:
//
//          TypeFieldTypeElementType2LocalizedValueArgs{...}
type TypeFieldTypeElementType2LocalizedValueInput interface {
	pulumi.Input

	ToTypeFieldTypeElementType2LocalizedValueOutput() TypeFieldTypeElementType2LocalizedValueOutput
	ToTypeFieldTypeElementType2LocalizedValueOutputWithContext(context.Context) TypeFieldTypeElementType2LocalizedValueOutput
}

type TypeFieldTypeElementType2LocalizedValueArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Label pulumi.MapInput    `pulumi:"label"`
}

func (TypeFieldTypeElementType2LocalizedValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeFieldTypeElementType2LocalizedValue)(nil)).Elem()
}

func (i TypeFieldTypeElementType2LocalizedValueArgs) ToTypeFieldTypeElementType2LocalizedValueOutput() TypeFieldTypeElementType2LocalizedValueOutput {
	return i.ToTypeFieldTypeElementType2LocalizedValueOutputWithContext(context.Background())
}

func (i TypeFieldTypeElementType2LocalizedValueArgs) ToTypeFieldTypeElementType2LocalizedValueOutputWithContext(ctx context.Context) TypeFieldTypeElementType2LocalizedValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldTypeElementType2LocalizedValueOutput)
}

// TypeFieldTypeElementType2LocalizedValueArrayInput is an input type that accepts TypeFieldTypeElementType2LocalizedValueArray and TypeFieldTypeElementType2LocalizedValueArrayOutput values.
// You can construct a concrete instance of `TypeFieldTypeElementType2LocalizedValueArrayInput` via:
//
//          TypeFieldTypeElementType2LocalizedValueArray{ TypeFieldTypeElementType2LocalizedValueArgs{...} }
type TypeFieldTypeElementType2LocalizedValueArrayInput interface {
	pulumi.Input

	ToTypeFieldTypeElementType2LocalizedValueArrayOutput() TypeFieldTypeElementType2LocalizedValueArrayOutput
	ToTypeFieldTypeElementType2LocalizedValueArrayOutputWithContext(context.Context) TypeFieldTypeElementType2LocalizedValueArrayOutput
}

type TypeFieldTypeElementType2LocalizedValueArray []TypeFieldTypeElementType2LocalizedValueInput

func (TypeFieldTypeElementType2LocalizedValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TypeFieldTypeElementType2LocalizedValue)(nil)).Elem()
}

func (i TypeFieldTypeElementType2LocalizedValueArray) ToTypeFieldTypeElementType2LocalizedValueArrayOutput() TypeFieldTypeElementType2LocalizedValueArrayOutput {
	return i.ToTypeFieldTypeElementType2LocalizedValueArrayOutputWithContext(context.Background())
}

func (i TypeFieldTypeElementType2LocalizedValueArray) ToTypeFieldTypeElementType2LocalizedValueArrayOutputWithContext(ctx context.Context) TypeFieldTypeElementType2LocalizedValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldTypeElementType2LocalizedValueArrayOutput)
}

type TypeFieldTypeElementType2LocalizedValueOutput struct{ *pulumi.OutputState }

func (TypeFieldTypeElementType2LocalizedValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeFieldTypeElementType2LocalizedValue)(nil)).Elem()
}

func (o TypeFieldTypeElementType2LocalizedValueOutput) ToTypeFieldTypeElementType2LocalizedValueOutput() TypeFieldTypeElementType2LocalizedValueOutput {
	return o
}

func (o TypeFieldTypeElementType2LocalizedValueOutput) ToTypeFieldTypeElementType2LocalizedValueOutputWithContext(ctx context.Context) TypeFieldTypeElementType2LocalizedValueOutput {
	return o
}

func (o TypeFieldTypeElementType2LocalizedValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TypeFieldTypeElementType2LocalizedValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o TypeFieldTypeElementType2LocalizedValueOutput) Label() pulumi.MapOutput {
	return o.ApplyT(func(v TypeFieldTypeElementType2LocalizedValue) map[string]interface{} { return v.Label }).(pulumi.MapOutput)
}

type TypeFieldTypeElementType2LocalizedValueArrayOutput struct{ *pulumi.OutputState }

func (TypeFieldTypeElementType2LocalizedValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TypeFieldTypeElementType2LocalizedValue)(nil)).Elem()
}

func (o TypeFieldTypeElementType2LocalizedValueArrayOutput) ToTypeFieldTypeElementType2LocalizedValueArrayOutput() TypeFieldTypeElementType2LocalizedValueArrayOutput {
	return o
}

func (o TypeFieldTypeElementType2LocalizedValueArrayOutput) ToTypeFieldTypeElementType2LocalizedValueArrayOutputWithContext(ctx context.Context) TypeFieldTypeElementType2LocalizedValueArrayOutput {
	return o
}

func (o TypeFieldTypeElementType2LocalizedValueArrayOutput) Index(i pulumi.IntInput) TypeFieldTypeElementType2LocalizedValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TypeFieldTypeElementType2LocalizedValue {
		return vs[0].([]TypeFieldTypeElementType2LocalizedValue)[vs[1].(int)]
	}).(TypeFieldTypeElementType2LocalizedValueOutput)
}

type TypeFieldTypeLocalizedValue struct {
	Key   string                 `pulumi:"key"`
	Label map[string]interface{} `pulumi:"label"`
}

// TypeFieldTypeLocalizedValueInput is an input type that accepts TypeFieldTypeLocalizedValueArgs and TypeFieldTypeLocalizedValueOutput values.
// You can construct a concrete instance of `TypeFieldTypeLocalizedValueInput` via:
//
//          TypeFieldTypeLocalizedValueArgs{...}
type TypeFieldTypeLocalizedValueInput interface {
	pulumi.Input

	ToTypeFieldTypeLocalizedValueOutput() TypeFieldTypeLocalizedValueOutput
	ToTypeFieldTypeLocalizedValueOutputWithContext(context.Context) TypeFieldTypeLocalizedValueOutput
}

type TypeFieldTypeLocalizedValueArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Label pulumi.MapInput    `pulumi:"label"`
}

func (TypeFieldTypeLocalizedValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeFieldTypeLocalizedValue)(nil)).Elem()
}

func (i TypeFieldTypeLocalizedValueArgs) ToTypeFieldTypeLocalizedValueOutput() TypeFieldTypeLocalizedValueOutput {
	return i.ToTypeFieldTypeLocalizedValueOutputWithContext(context.Background())
}

func (i TypeFieldTypeLocalizedValueArgs) ToTypeFieldTypeLocalizedValueOutputWithContext(ctx context.Context) TypeFieldTypeLocalizedValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldTypeLocalizedValueOutput)
}

// TypeFieldTypeLocalizedValueArrayInput is an input type that accepts TypeFieldTypeLocalizedValueArray and TypeFieldTypeLocalizedValueArrayOutput values.
// You can construct a concrete instance of `TypeFieldTypeLocalizedValueArrayInput` via:
//
//          TypeFieldTypeLocalizedValueArray{ TypeFieldTypeLocalizedValueArgs{...} }
type TypeFieldTypeLocalizedValueArrayInput interface {
	pulumi.Input

	ToTypeFieldTypeLocalizedValueArrayOutput() TypeFieldTypeLocalizedValueArrayOutput
	ToTypeFieldTypeLocalizedValueArrayOutputWithContext(context.Context) TypeFieldTypeLocalizedValueArrayOutput
}

type TypeFieldTypeLocalizedValueArray []TypeFieldTypeLocalizedValueInput

func (TypeFieldTypeLocalizedValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TypeFieldTypeLocalizedValue)(nil)).Elem()
}

func (i TypeFieldTypeLocalizedValueArray) ToTypeFieldTypeLocalizedValueArrayOutput() TypeFieldTypeLocalizedValueArrayOutput {
	return i.ToTypeFieldTypeLocalizedValueArrayOutputWithContext(context.Background())
}

func (i TypeFieldTypeLocalizedValueArray) ToTypeFieldTypeLocalizedValueArrayOutputWithContext(ctx context.Context) TypeFieldTypeLocalizedValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TypeFieldTypeLocalizedValueArrayOutput)
}

type TypeFieldTypeLocalizedValueOutput struct{ *pulumi.OutputState }

func (TypeFieldTypeLocalizedValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TypeFieldTypeLocalizedValue)(nil)).Elem()
}

func (o TypeFieldTypeLocalizedValueOutput) ToTypeFieldTypeLocalizedValueOutput() TypeFieldTypeLocalizedValueOutput {
	return o
}

func (o TypeFieldTypeLocalizedValueOutput) ToTypeFieldTypeLocalizedValueOutputWithContext(ctx context.Context) TypeFieldTypeLocalizedValueOutput {
	return o
}

func (o TypeFieldTypeLocalizedValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TypeFieldTypeLocalizedValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o TypeFieldTypeLocalizedValueOutput) Label() pulumi.MapOutput {
	return o.ApplyT(func(v TypeFieldTypeLocalizedValue) map[string]interface{} { return v.Label }).(pulumi.MapOutput)
}

type TypeFieldTypeLocalizedValueArrayOutput struct{ *pulumi.OutputState }

func (TypeFieldTypeLocalizedValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TypeFieldTypeLocalizedValue)(nil)).Elem()
}

func (o TypeFieldTypeLocalizedValueArrayOutput) ToTypeFieldTypeLocalizedValueArrayOutput() TypeFieldTypeLocalizedValueArrayOutput {
	return o
}

func (o TypeFieldTypeLocalizedValueArrayOutput) ToTypeFieldTypeLocalizedValueArrayOutputWithContext(ctx context.Context) TypeFieldTypeLocalizedValueArrayOutput {
	return o
}

func (o TypeFieldTypeLocalizedValueArrayOutput) Index(i pulumi.IntInput) TypeFieldTypeLocalizedValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TypeFieldTypeLocalizedValue {
		return vs[0].([]TypeFieldTypeLocalizedValue)[vs[1].(int)]
	}).(TypeFieldTypeLocalizedValueOutput)
}

func init() {
	pulumi.RegisterOutputType(ApiExtensionDestinationOutput{})
	pulumi.RegisterOutputType(ApiExtensionDestinationPtrOutput{})
	pulumi.RegisterOutputType(ApiExtensionTriggerOutput{})
	pulumi.RegisterOutputType(ApiExtensionTriggerArrayOutput{})
	pulumi.RegisterOutputType(CartDiscountTargetOutput{})
	pulumi.RegisterOutputType(CartDiscountTargetPtrOutput{})
	pulumi.RegisterOutputType(CartDiscountValueOutput{})
	pulumi.RegisterOutputType(CartDiscountValuePtrOutput{})
	pulumi.RegisterOutputType(CartDiscountValueMoneyOutput{})
	pulumi.RegisterOutputType(CartDiscountValueMoneyArrayOutput{})
	pulumi.RegisterOutputType(ProductTypeAttributeOutput{})
	pulumi.RegisterOutputType(ProductTypeAttributeArrayOutput{})
	pulumi.RegisterOutputType(ProductTypeAttributeTypeOutput{})
	pulumi.RegisterOutputType(ProductTypeAttributeTypeElementType2Output{})
	pulumi.RegisterOutputType(ProductTypeAttributeTypeElementType2PtrOutput{})
	pulumi.RegisterOutputType(ProductTypeAttributeTypeElementType2LocalizedValueOutput{})
	pulumi.RegisterOutputType(ProductTypeAttributeTypeElementType2LocalizedValueArrayOutput{})
	pulumi.RegisterOutputType(ProductTypeAttributeTypeLocalizedValueOutput{})
	pulumi.RegisterOutputType(ProductTypeAttributeTypeLocalizedValueArrayOutput{})
	pulumi.RegisterOutputType(ProjectSettingsExternalOauthOutput{})
	pulumi.RegisterOutputType(ProjectSettingsExternalOauthPtrOutput{})
	pulumi.RegisterOutputType(ProjectSettingsMessagesOutput{})
	pulumi.RegisterOutputType(ProjectSettingsMessagesPtrOutput{})
	pulumi.RegisterOutputType(ShippingZoneLocationOutput{})
	pulumi.RegisterOutputType(ShippingZoneLocationArrayOutput{})
	pulumi.RegisterOutputType(ShippingZoneRateFreeAboveOutput{})
	pulumi.RegisterOutputType(ShippingZoneRateFreeAbovePtrOutput{})
	pulumi.RegisterOutputType(ShippingZoneRatePriceOutput{})
	pulumi.RegisterOutputType(ShippingZoneRatePricePtrOutput{})
	pulumi.RegisterOutputType(SubscriptionChangeOutput{})
	pulumi.RegisterOutputType(SubscriptionChangeArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionDestinationOutput{})
	pulumi.RegisterOutputType(SubscriptionDestinationPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionFormatOutput{})
	pulumi.RegisterOutputType(SubscriptionFormatPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionMessageOutput{})
	pulumi.RegisterOutputType(SubscriptionMessageArrayOutput{})
	pulumi.RegisterOutputType(TaxCategoryRateSubRateOutput{})
	pulumi.RegisterOutputType(TaxCategoryRateSubRateArrayOutput{})
	pulumi.RegisterOutputType(TypeFieldOutput{})
	pulumi.RegisterOutputType(TypeFieldArrayOutput{})
	pulumi.RegisterOutputType(TypeFieldTypeOutput{})
	pulumi.RegisterOutputType(TypeFieldTypeElementType2Output{})
	pulumi.RegisterOutputType(TypeFieldTypeElementType2PtrOutput{})
	pulumi.RegisterOutputType(TypeFieldTypeElementType2LocalizedValueOutput{})
	pulumi.RegisterOutputType(TypeFieldTypeElementType2LocalizedValueArrayOutput{})
	pulumi.RegisterOutputType(TypeFieldTypeLocalizedValueOutput{})
	pulumi.RegisterOutputType(TypeFieldTypeLocalizedValueArrayOutput{})
}
