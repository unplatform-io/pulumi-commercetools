{
    "name": "commercetools",
    "description": "A Pulumi package for creating and managing commercetools cloud resources.",
    "keywords": [
        "pulumi",
        "commercetools"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`commercetools` Terraform Provider](https://github.com/terraform-providers/terraform-provider-commercetools).",
    "repository": "https://github.com/unplatform-io/pulumi-commercetools",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "apiUrl": {
                "type": "string",
                "description": "The API URL of the commercetools platform. https://docs.commercetools.com/http-api\n"
            },
            "clientId": {
                "type": "string",
                "description": "The OAuth Client ID for a commercetools platform project. https://docs.commercetools.com/http-api-authorization\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "The OAuth Client Secret for a commercetools platform project. https://docs.commercetools.com/http-api-authorization\n"
            },
            "projectKey": {
                "type": "string",
                "description": "The project key of commercetools platform project. https://docs.commercetools.com/getting-started\n"
            },
            "scopes": {
                "type": "string",
                "description": "A list as string of OAuth scopes assigned to a project key, to access resources in a commercetools platform project.\nhttps://docs.commercetools.com/http-api-authorization\n"
            },
            "tokenUrl": {
                "type": "string",
                "description": "The authentication URL of the commercetools platform. https://docs.commercetools.com/http-api-authorization\n"
            }
        },
        "defaults": [
            "apiUrl",
            "clientId",
            "clientSecret",
            "projectKey",
            "scopes",
            "tokenUrl"
        ]
    },
    "types": {
        "commercetools:index/ApiExtensionDestination:ApiExtensionDestination": {
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "accessSecret": {
                    "type": "string"
                },
                "arn": {
                    "type": "string"
                },
                "authorizationHeader": {
                    "type": "string"
                },
                "azureAuthentication": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "commercetools:index/ApiExtensionTrigger:ApiExtensionTrigger": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceTypeId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "actions",
                "resourceTypeId"
            ]
        },
        "commercetools:index/CartDiscountTarget:CartDiscountTarget": {
            "properties": {
                "predicate": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "commercetools:index/CartDiscountValue:CartDiscountValue": {
            "properties": {
                "distributionChannelId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/commercetools:index/CartDiscountValueMoney:CartDiscountValueMoney"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permyriad": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "supplyChannelId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variant": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "commercetools:index/CartDiscountValueMoney:CartDiscountValueMoney": {
            "properties": {
                "centAmount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "currencyCode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "centAmount",
                "currencyCode"
            ]
        },
        "commercetools:index/ProductTypeAttribute:ProductTypeAttribute": {
            "properties": {
                "constraint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "inputHint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "inputTip": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "required": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchable": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "$ref": "#/types/commercetools:index/ProductTypeAttributeType:ProductTypeAttributeType",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "name",
                "type"
            ]
        },
        "commercetools:index/ProductTypeAttributeType:ProductTypeAttributeType": {
            "properties": {
                "ElementType2": {
                    "$ref": "#/types/commercetools:index/ProductTypeAttributeTypeElementType2:ProductTypeAttributeTypeElementType2",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "localizedValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/commercetools:index/ProductTypeAttributeTypeLocalizedValue:ProductTypeAttributeTypeLocalizedValue"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "referenceTypeId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "typeReference": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "commercetools:index/ProductTypeAttributeTypeElementType2:ProductTypeAttributeTypeElementType2": {
            "properties": {
                "localizedValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/commercetools:index/ProductTypeAttributeTypeElementType2LocalizedValue:ProductTypeAttributeTypeElementType2LocalizedValue"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "referenceTypeId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "typeReference": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "commercetools:index/ProductTypeAttributeTypeElementType2LocalizedValue:ProductTypeAttributeTypeElementType2LocalizedValue": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "label"
            ]
        },
        "commercetools:index/ProductTypeAttributeTypeLocalizedValue:ProductTypeAttributeTypeLocalizedValue": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "label"
            ]
        },
        "commercetools:index/ProjectSettingsCarts:ProjectSettingsCarts": {
            "properties": {
                "countryTaxRateFallbackEnabled": {
                    "type": "boolean"
                },
                "deleteDaysAfterLastModification": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "countryTaxRateFallbackEnabled"
            ]
        },
        "commercetools:index/ProjectSettingsExternalOauth:ProjectSettingsExternalOauth": {
            "properties": {
                "authorizationHeader": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authorizationHeader",
                "url"
            ]
        },
        "commercetools:index/ProjectSettingsMessages:ProjectSettingsMessages": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "commercetools:index/ProjectSettingsShippingRateCartClassificationValue:ProjectSettingsShippingRateCartClassificationValue": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "commercetools:index/ShippingZoneLocation:ShippingZoneLocation": {
            "properties": {
                "country": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "state": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "country"
            ]
        },
        "commercetools:index/ShippingZoneRateFreeAbove:ShippingZoneRateFreeAbove": {
            "properties": {
                "centAmount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "currencyCode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "centAmount",
                "currencyCode"
            ]
        },
        "commercetools:index/ShippingZoneRatePrice:ShippingZoneRatePrice": {
            "properties": {
                "centAmount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "currencyCode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "centAmount",
                "currencyCode"
            ]
        },
        "commercetools:index/ShippingZoneRateShippingRatePriceTier:ShippingZoneRateShippingRatePriceTier": {
            "properties": {
                "minimumCentAmount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "price": {
                    "$ref": "#/types/commercetools:index/ShippingZoneRateShippingRatePriceTierPrice:ShippingZoneRateShippingRatePriceTierPrice",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "score": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "price",
                "type"
            ]
        },
        "commercetools:index/ShippingZoneRateShippingRatePriceTierPrice:ShippingZoneRateShippingRatePriceTierPrice": {
            "properties": {
                "centAmount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "currencyCode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "centAmount",
                "currencyCode"
            ]
        },
        "commercetools:index/SubscriptionChange:SubscriptionChange": {
            "properties": {
                "resourceTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "commercetools:index/SubscriptionDestination:SubscriptionDestination": {
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "accessSecret": {
                    "type": "string"
                },
                "connectionString": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "queueUrl": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                },
                "topicArn": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "region",
                "type",
                "uri"
            ]
        },
        "commercetools:index/SubscriptionFormat:SubscriptionFormat": {
            "properties": {
                "cloudEventsVersion": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "commercetools:index/SubscriptionMessage:SubscriptionMessage": {
            "properties": {
                "resourceTypeId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "commercetools:index/TaxCategoryRateSubRate:TaxCategoryRateSubRate": {
            "properties": {
                "amount": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "amount",
                "name"
            ]
        },
        "commercetools:index/TypeField:TypeField": {
            "properties": {
                "inputHint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "required": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "$ref": "#/types/commercetools:index/TypeFieldType:TypeFieldType",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "name",
                "type"
            ]
        },
        "commercetools:index/TypeFieldType:TypeFieldType": {
            "properties": {
                "ElementType2": {
                    "$ref": "#/types/commercetools:index/TypeFieldTypeElementType2:TypeFieldTypeElementType2",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "localizedValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/commercetools:index/TypeFieldTypeLocalizedValue:TypeFieldTypeLocalizedValue"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "referenceTypeId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "commercetools:index/TypeFieldTypeElementType2:TypeFieldTypeElementType2": {
            "properties": {
                "localizedValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/commercetools:index/TypeFieldTypeElementType2LocalizedValue:TypeFieldTypeElementType2LocalizedValue"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "referenceTypeId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "commercetools:index/TypeFieldTypeElementType2LocalizedValue:TypeFieldTypeElementType2LocalizedValue": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "label"
            ]
        },
        "commercetools:index/TypeFieldTypeLocalizedValue:TypeFieldTypeLocalizedValue": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "label"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the commercetools package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiUrl": {
                "type": "string",
                "description": "The API URL of the commercetools platform. https://docs.commercetools.com/http-api\n"
            },
            "clientId": {
                "type": "string",
                "description": "The OAuth Client ID for a commercetools platform project. https://docs.commercetools.com/http-api-authorization\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "The OAuth Client Secret for a commercetools platform project. https://docs.commercetools.com/http-api-authorization\n"
            },
            "projectKey": {
                "type": "string",
                "description": "The project key of commercetools platform project. https://docs.commercetools.com/getting-started\n"
            },
            "scopes": {
                "type": "string",
                "description": "A list as string of OAuth scopes assigned to a project key, to access resources in a commercetools platform project.\nhttps://docs.commercetools.com/http-api-authorization\n"
            },
            "tokenUrl": {
                "type": "string",
                "description": "The authentication URL of the commercetools platform. https://docs.commercetools.com/http-api-authorization\n"
            }
        },
        "required": [
            "apiUrl",
            "clientId",
            "clientSecret",
            "projectKey",
            "scopes",
            "tokenUrl"
        ],
        "inputProperties": {
            "apiUrl": {
                "type": "string",
                "description": "The API URL of the commercetools platform. https://docs.commercetools.com/http-api\n"
            },
            "clientId": {
                "type": "string",
                "description": "The OAuth Client ID for a commercetools platform project. https://docs.commercetools.com/http-api-authorization\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "The OAuth Client Secret for a commercetools platform project. https://docs.commercetools.com/http-api-authorization\n"
            },
            "projectKey": {
                "type": "string",
                "description": "The project key of commercetools platform project. https://docs.commercetools.com/getting-started\n"
            },
            "scopes": {
                "type": "string",
                "description": "A list as string of OAuth scopes assigned to a project key, to access resources in a commercetools platform project.\nhttps://docs.commercetools.com/http-api-authorization\n"
            },
            "tokenUrl": {
                "type": "string",
                "description": "The authentication URL of the commercetools platform. https://docs.commercetools.com/http-api-authorization\n"
            }
        },
        "requiredInputs": [
            "apiUrl",
            "clientId",
            "clientSecret",
            "projectKey",
            "scopes",
            "tokenUrl"
        ]
    },
    "resources": {
        "commercetools:index/apiClient:ApiClient": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the API client\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the [OAuth scopes](https://docs.commercetools.com/http-api-authorization.html#scopes)\n"
                },
                "secret": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "scopes",
                "secret"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the API client\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the [OAuth scopes](https://docs.commercetools.com/http-api-authorization.html#scopes)\n"
                }
            },
            "requiredInputs": [
                "scopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApiClient resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the API client\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of the [OAuth scopes](https://docs.commercetools.com/http-api-authorization.html#scopes)\n"
                    },
                    "secret": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "commercetools:index/apiExtension:ApiExtension": {
            "properties": {
                "destination": {
                    "$ref": "#/types/commercetools:index/ApiExtensionDestination:ApiExtensionDestination",
                    "description": "[Destination](https://docs.commercetools.com/api/projects/api-extensions#destination) Details where the extension can be\nreached\n"
                },
                "key": {
                    "type": "string",
                    "description": "User-specific unique identifier for the extension\n"
                },
                "timeoutInMs": {
                    "type": "integer",
                    "description": "Extension timeout in milliseconds\n"
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/commercetools:index/ApiExtensionTrigger:ApiExtensionTrigger"
                    },
                    "description": "Array of [Trigger](https://docs.commercetools.com/api/projects/api-extensions#trigger) Describes what triggers the\nextension\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "destination",
                "triggers",
                "version"
            ],
            "inputProperties": {
                "destination": {
                    "$ref": "#/types/commercetools:index/ApiExtensionDestination:ApiExtensionDestination",
                    "description": "[Destination](https://docs.commercetools.com/api/projects/api-extensions#destination) Details where the extension can be\nreached\n"
                },
                "key": {
                    "type": "string",
                    "description": "User-specific unique identifier for the extension\n"
                },
                "timeoutInMs": {
                    "type": "integer",
                    "description": "Extension timeout in milliseconds\n"
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/commercetools:index/ApiExtensionTrigger:ApiExtensionTrigger"
                    },
                    "description": "Array of [Trigger](https://docs.commercetools.com/api/projects/api-extensions#trigger) Describes what triggers the\nextension\n"
                }
            },
            "requiredInputs": [
                "destination",
                "triggers"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApiExtension resources.\n",
                "properties": {
                    "destination": {
                        "$ref": "#/types/commercetools:index/ApiExtensionDestination:ApiExtensionDestination",
                        "description": "[Destination](https://docs.commercetools.com/api/projects/api-extensions#destination) Details where the extension can be\nreached\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "User-specific unique identifier for the extension\n"
                    },
                    "timeoutInMs": {
                        "type": "integer",
                        "description": "Extension timeout in milliseconds\n"
                    },
                    "triggers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/commercetools:index/ApiExtensionTrigger:ApiExtensionTrigger"
                        },
                        "description": "Array of [Trigger](https://docs.commercetools.com/api/projects/api-extensions#trigger) Describes what triggers the\nextension\n"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "commercetools:index/cartDiscount:CartDiscount": {
            "properties": {
                "description": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Only active discount can be applied to the cart\n"
                },
                "key": {
                    "type": "string",
                    "description": "User-specific unique identifier for a cart discount. Must be unique across a project\n"
                },
                "name": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "predicate": {
                    "type": "string",
                    "description": "A valid [Cart Predicate](https://docs.commercetools.com/api/projects/predicates#cart-predicates)\n"
                },
                "requiresDiscountCode": {
                    "type": "boolean",
                    "description": "States whether the discount can only be used in a connection with a\n[DiscountCode](https://docs.commercetools.com/api/projects/discountCodes#discountcode)\n"
                },
                "sortOrder": {
                    "type": "string",
                    "description": "The string must contain a number between 0 and 1. All matching cart discounts are applied to a cart in the order defined\nby this field. A discount with greater sort order is prioritized higher than a discount with lower sort order. The sort\norder is unambiguous among all cart discounts\n"
                },
                "stackingMode": {
                    "type": "string",
                    "description": "Specifies whether the application of this discount causes the following discounts to be ignored\n"
                },
                "target": {
                    "$ref": "#/types/commercetools:index/CartDiscountTarget:CartDiscountTarget",
                    "description": "Empty when the value has type giftLineItem, otherwise a\n[CartDiscountTarget](https://docs.commercetools.com/api/projects/cartDiscounts#cartdiscounttarget)\n"
                },
                "validFrom": {
                    "type": "string"
                },
                "validUntil": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/commercetools:index/CartDiscountValue:CartDiscountValue",
                    "description": "Defines the effect the discount will have.\n[CartDiscountValue](https://docs.commercetools.com/api/projects/cartDiscounts#cartdiscountvalue)\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "name",
                "predicate",
                "sortOrder",
                "value",
                "version"
            ],
            "inputProperties": {
                "description": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Only active discount can be applied to the cart\n"
                },
                "key": {
                    "type": "string",
                    "description": "User-specific unique identifier for a cart discount. Must be unique across a project\n"
                },
                "name": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "predicate": {
                    "type": "string",
                    "description": "A valid [Cart Predicate](https://docs.commercetools.com/api/projects/predicates#cart-predicates)\n"
                },
                "requiresDiscountCode": {
                    "type": "boolean",
                    "description": "States whether the discount can only be used in a connection with a\n[DiscountCode](https://docs.commercetools.com/api/projects/discountCodes#discountcode)\n"
                },
                "sortOrder": {
                    "type": "string",
                    "description": "The string must contain a number between 0 and 1. All matching cart discounts are applied to a cart in the order defined\nby this field. A discount with greater sort order is prioritized higher than a discount with lower sort order. The sort\norder is unambiguous among all cart discounts\n"
                },
                "stackingMode": {
                    "type": "string",
                    "description": "Specifies whether the application of this discount causes the following discounts to be ignored\n"
                },
                "target": {
                    "$ref": "#/types/commercetools:index/CartDiscountTarget:CartDiscountTarget",
                    "description": "Empty when the value has type giftLineItem, otherwise a\n[CartDiscountTarget](https://docs.commercetools.com/api/projects/cartDiscounts#cartdiscounttarget)\n"
                },
                "validFrom": {
                    "type": "string"
                },
                "validUntil": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/commercetools:index/CartDiscountValue:CartDiscountValue",
                    "description": "Defines the effect the discount will have.\n[CartDiscountValue](https://docs.commercetools.com/api/projects/cartDiscounts#cartdiscountvalue)\n"
                }
            },
            "requiredInputs": [
                "predicate",
                "sortOrder",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CartDiscount resources.\n",
                "properties": {
                    "description": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Only active discount can be applied to the cart\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "User-specific unique identifier for a cart discount. Must be unique across a project\n"
                    },
                    "name": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                    },
                    "predicate": {
                        "type": "string",
                        "description": "A valid [Cart Predicate](https://docs.commercetools.com/api/projects/predicates#cart-predicates)\n"
                    },
                    "requiresDiscountCode": {
                        "type": "boolean",
                        "description": "States whether the discount can only be used in a connection with a\n[DiscountCode](https://docs.commercetools.com/api/projects/discountCodes#discountcode)\n"
                    },
                    "sortOrder": {
                        "type": "string",
                        "description": "The string must contain a number between 0 and 1. All matching cart discounts are applied to a cart in the order defined\nby this field. A discount with greater sort order is prioritized higher than a discount with lower sort order. The sort\norder is unambiguous among all cart discounts\n"
                    },
                    "stackingMode": {
                        "type": "string",
                        "description": "Specifies whether the application of this discount causes the following discounts to be ignored\n"
                    },
                    "target": {
                        "$ref": "#/types/commercetools:index/CartDiscountTarget:CartDiscountTarget",
                        "description": "Empty when the value has type giftLineItem, otherwise a\n[CartDiscountTarget](https://docs.commercetools.com/api/projects/cartDiscounts#cartdiscounttarget)\n"
                    },
                    "validFrom": {
                        "type": "string"
                    },
                    "validUntil": {
                        "type": "string"
                    },
                    "value": {
                        "$ref": "#/types/commercetools:index/CartDiscountValue:CartDiscountValue",
                        "description": "Defines the effect the discount will have.\n[CartDiscountValue](https://docs.commercetools.com/api/projects/cartDiscounts#cartdiscountvalue)\n"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "commercetools:index/channel:Channel": {
            "properties": {
                "description": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "key": {
                    "type": "string",
                    "description": "Any arbitrary string key that uniquely identifies this channel within the project\n"
                },
                "name": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The [roles](https://docs.commercetools.com/api/projects/channels#channelroleenum) of this channel. Each channel must\nhave at least one role\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "key",
                "name",
                "roles",
                "version"
            ],
            "inputProperties": {
                "description": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "key": {
                    "type": "string",
                    "description": "Any arbitrary string key that uniquely identifies this channel within the project\n"
                },
                "name": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The [roles](https://docs.commercetools.com/api/projects/channels#channelroleenum) of this channel. Each channel must\nhave at least one role\n"
                }
            },
            "requiredInputs": [
                "key",
                "roles"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Channel resources.\n",
                "properties": {
                    "description": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "Any arbitrary string key that uniquely identifies this channel within the project\n"
                    },
                    "name": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The [roles](https://docs.commercetools.com/api/projects/channels#channelroleenum) of this channel. Each channel must\nhave at least one role\n"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "commercetools:index/customObject:CustomObject": {
            "properties": {
                "container": {
                    "type": "string",
                    "description": "A namespace to group custom objects matching the pattern '[-_~.a-zA-Z0-9]+'\n"
                },
                "key": {
                    "type": "string",
                    "description": "String matching the pattern '[-_~.a-zA-Z0-9]+'\n"
                },
                "value": {
                    "type": "string",
                    "description": "JSON types Number, String, Boolean, Array, Object\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "container",
                "key",
                "value",
                "version"
            ],
            "inputProperties": {
                "container": {
                    "type": "string",
                    "description": "A namespace to group custom objects matching the pattern '[-_~.a-zA-Z0-9]+'\n"
                },
                "key": {
                    "type": "string",
                    "description": "String matching the pattern '[-_~.a-zA-Z0-9]+'\n"
                },
                "value": {
                    "type": "string",
                    "description": "JSON types Number, String, Boolean, Array, Object\n"
                }
            },
            "requiredInputs": [
                "container",
                "key",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomObject resources.\n",
                "properties": {
                    "container": {
                        "type": "string",
                        "description": "A namespace to group custom objects matching the pattern '[-_~.a-zA-Z0-9]+'\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "String matching the pattern '[-_~.a-zA-Z0-9]+'\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "JSON types Number, String, Boolean, Array, Object\n"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "commercetools:index/discountCode:DiscountCode": {
            "properties": {
                "cartDiscounts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The referenced matching cart discounts can be applied to the cart once the DiscountCode is added\n"
                },
                "code": {
                    "type": "string",
                    "description": "Unique identifier of this discount code. This value is added to the cart to enable the related cart discounts in the\ncart\n"
                },
                "description": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The groups to which this discount code belong\n"
                },
                "isActive": {
                    "type": "boolean"
                },
                "maxApplications": {
                    "type": "integer",
                    "description": "The discount code can only be applied maxApplications times\n"
                },
                "maxApplicationsPerCustomer": {
                    "type": "integer",
                    "description": "The discount code can only be applied maxApplicationsPerCustomer times per customer\n"
                },
                "name": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "predicate": {
                    "type": "string",
                    "description": "[Cart Predicate](https://docs.commercetools.com/api/projects/predicates#cart-predicates)\n"
                },
                "validFrom": {
                    "type": "string",
                    "description": "The time from which the discount can be applied on a cart. Before that time the code is invalid\n"
                },
                "validUntil": {
                    "type": "string",
                    "description": "The time until the discount can be applied on a cart. After that time the code is invalid\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "cartDiscounts",
                "code",
                "name",
                "version"
            ],
            "inputProperties": {
                "cartDiscounts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The referenced matching cart discounts can be applied to the cart once the DiscountCode is added\n"
                },
                "code": {
                    "type": "string",
                    "description": "Unique identifier of this discount code. This value is added to the cart to enable the related cart discounts in the\ncart\n"
                },
                "description": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The groups to which this discount code belong\n"
                },
                "isActive": {
                    "type": "boolean"
                },
                "maxApplications": {
                    "type": "integer",
                    "description": "The discount code can only be applied maxApplications times\n"
                },
                "maxApplicationsPerCustomer": {
                    "type": "integer",
                    "description": "The discount code can only be applied maxApplicationsPerCustomer times per customer\n"
                },
                "name": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "predicate": {
                    "type": "string",
                    "description": "[Cart Predicate](https://docs.commercetools.com/api/projects/predicates#cart-predicates)\n"
                },
                "validFrom": {
                    "type": "string",
                    "description": "The time from which the discount can be applied on a cart. Before that time the code is invalid\n"
                },
                "validUntil": {
                    "type": "string",
                    "description": "The time until the discount can be applied on a cart. After that time the code is invalid\n"
                }
            },
            "requiredInputs": [
                "cartDiscounts",
                "code"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DiscountCode resources.\n",
                "properties": {
                    "cartDiscounts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The referenced matching cart discounts can be applied to the cart once the DiscountCode is added\n"
                    },
                    "code": {
                        "type": "string",
                        "description": "Unique identifier of this discount code. This value is added to the cart to enable the related cart discounts in the\ncart\n"
                    },
                    "description": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The groups to which this discount code belong\n"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "maxApplications": {
                        "type": "integer",
                        "description": "The discount code can only be applied maxApplications times\n"
                    },
                    "maxApplicationsPerCustomer": {
                        "type": "integer",
                        "description": "The discount code can only be applied maxApplicationsPerCustomer times per customer\n"
                    },
                    "name": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                    },
                    "predicate": {
                        "type": "string",
                        "description": "[Cart Predicate](https://docs.commercetools.com/api/projects/predicates#cart-predicates)\n"
                    },
                    "validFrom": {
                        "type": "string",
                        "description": "The time from which the discount can be applied on a cart. Before that time the code is invalid\n"
                    },
                    "validUntil": {
                        "type": "string",
                        "description": "The time until the discount can be applied on a cart. After that time the code is invalid\n"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "commercetools:index/productType:ProductType": {
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/commercetools:index/ProductTypeAttribute:ProductTypeAttribute"
                    },
                    "description": "[Product attribute fefinition](https://docs.commercetools.com/api/projects/productTypes#attributedefinition)\n"
                },
                "description": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "User-specific unique identifier for the product type (max. 256 characters)\n"
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "name",
                "version"
            ],
            "inputProperties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/commercetools:index/ProductTypeAttribute:ProductTypeAttribute"
                    },
                    "description": "[Product attribute fefinition](https://docs.commercetools.com/api/projects/productTypes#attributedefinition)\n"
                },
                "description": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "User-specific unique identifier for the product type (max. 256 characters)\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProductType resources.\n",
                "properties": {
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/commercetools:index/ProductTypeAttribute:ProductTypeAttribute"
                        },
                        "description": "[Product attribute fefinition](https://docs.commercetools.com/api/projects/productTypes#attributedefinition)\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "User-specific unique identifier for the product type (max. 256 characters)\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "commercetools:index/projectSettings:ProjectSettings": {
            "properties": {
                "carts": {
                    "$ref": "#/types/commercetools:index/ProjectSettingsCarts:ProjectSettingsCarts",
                    "description": "[Carts Configuration](https://docs.commercetools.com/api/projects/project#carts-configuration)\n"
                },
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\n"
                },
                "currencies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A three-digit currency code as per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)\n"
                },
                "externalOauth": {
                    "$ref": "#/types/commercetools:index/ProjectSettingsExternalOauth:ProjectSettingsExternalOauth",
                    "description": "[External OAUTH](https://docs.commercetools.com/api/projects/project#externaloauth)\n"
                },
                "key": {
                    "type": "string",
                    "description": "The unique key of the project\n"
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "[IETF Language Tag](https://en.wikipedia.org/wiki/IETF_language_tag)\n"
                },
                "messages": {
                    "$ref": "#/types/commercetools:index/ProjectSettingsMessages:ProjectSettingsMessages",
                    "description": "[Messages Configuration](https://docs.commercetools.com/api/projects/project#messages-configuration)\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the project\n"
                },
                "shippingRateCartClassificationValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/commercetools:index/ProjectSettingsShippingRateCartClassificationValue:ProjectSettingsShippingRateCartClassificationValue"
                    },
                    "description": "If shipping_rate_input_type is set to CartClassification these values are used to create tiers . Only a key defined\ninside the values array can be used to create a tier, or to set a value for the shippingRateInput on the cart. The keys\nare checked for uniqueness and the request is rejected if keys are not unique\n"
                },
                "shippingRateInputType": {
                    "type": "string",
                    "description": "Three ways to dynamically select a ShippingRatePriceTier exist. The CartValue type uses the sum of all line item prices,\nwhereas CartClassification and CartScore use the shippingRateInput field on the cart to select a tier\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "key",
                "name",
                "version"
            ],
            "inputProperties": {
                "carts": {
                    "$ref": "#/types/commercetools:index/ProjectSettingsCarts:ProjectSettingsCarts",
                    "description": "[Carts Configuration](https://docs.commercetools.com/api/projects/project#carts-configuration)\n"
                },
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\n"
                },
                "currencies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A three-digit currency code as per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)\n"
                },
                "externalOauth": {
                    "$ref": "#/types/commercetools:index/ProjectSettingsExternalOauth:ProjectSettingsExternalOauth",
                    "description": "[External OAUTH](https://docs.commercetools.com/api/projects/project#externaloauth)\n"
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "[IETF Language Tag](https://en.wikipedia.org/wiki/IETF_language_tag)\n"
                },
                "messages": {
                    "$ref": "#/types/commercetools:index/ProjectSettingsMessages:ProjectSettingsMessages",
                    "description": "[Messages Configuration](https://docs.commercetools.com/api/projects/project#messages-configuration)\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the project\n"
                },
                "shippingRateCartClassificationValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/commercetools:index/ProjectSettingsShippingRateCartClassificationValue:ProjectSettingsShippingRateCartClassificationValue"
                    },
                    "description": "If shipping_rate_input_type is set to CartClassification these values are used to create tiers . Only a key defined\ninside the values array can be used to create a tier, or to set a value for the shippingRateInput on the cart. The keys\nare checked for uniqueness and the request is rejected if keys are not unique\n"
                },
                "shippingRateInputType": {
                    "type": "string",
                    "description": "Three ways to dynamically select a ShippingRatePriceTier exist. The CartValue type uses the sum of all line item prices,\nwhereas CartClassification and CartScore use the shippingRateInput field on the cart to select a tier\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProjectSettings resources.\n",
                "properties": {
                    "carts": {
                        "$ref": "#/types/commercetools:index/ProjectSettingsCarts:ProjectSettingsCarts",
                        "description": "[Carts Configuration](https://docs.commercetools.com/api/projects/project#carts-configuration)\n"
                    },
                    "countries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\n"
                    },
                    "currencies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A three-digit currency code as per [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)\n"
                    },
                    "externalOauth": {
                        "$ref": "#/types/commercetools:index/ProjectSettingsExternalOauth:ProjectSettingsExternalOauth",
                        "description": "[External OAUTH](https://docs.commercetools.com/api/projects/project#externaloauth)\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The unique key of the project\n"
                    },
                    "languages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "[IETF Language Tag](https://en.wikipedia.org/wiki/IETF_language_tag)\n"
                    },
                    "messages": {
                        "$ref": "#/types/commercetools:index/ProjectSettingsMessages:ProjectSettingsMessages",
                        "description": "[Messages Configuration](https://docs.commercetools.com/api/projects/project#messages-configuration)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the project\n"
                    },
                    "shippingRateCartClassificationValues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/commercetools:index/ProjectSettingsShippingRateCartClassificationValue:ProjectSettingsShippingRateCartClassificationValue"
                        },
                        "description": "If shipping_rate_input_type is set to CartClassification these values are used to create tiers . Only a key defined\ninside the values array can be used to create a tier, or to set a value for the shippingRateInput on the cart. The keys\nare checked for uniqueness and the request is rejected if keys are not unique\n"
                    },
                    "shippingRateInputType": {
                        "type": "string",
                        "description": "Three ways to dynamically select a ShippingRatePriceTier exist. The CartValue type uses the sum of all line item prices,\nwhereas CartClassification and CartScore use the shippingRateInput field on the cart to select a tier\n"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "commercetools:index/shippingMethod:ShippingMethod": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "One shipping method in a project can be default\n"
                },
                "key": {
                    "type": "string",
                    "description": "User-specific unique identifier for the shipping method\n"
                },
                "localizedDescription": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "name": {
                    "type": "string"
                },
                "predicate": {
                    "type": "string",
                    "description": "A Cart predicate which can be used to more precisely select a shipping method for a cart\n"
                },
                "taxCategoryId": {
                    "type": "string",
                    "description": "ID of a [Tax Category](https://docs.commercetools.com/api/projects/taxCategories#taxcategory)\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "name",
                "version"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "One shipping method in a project can be default\n"
                },
                "key": {
                    "type": "string",
                    "description": "User-specific unique identifier for the shipping method\n"
                },
                "localizedDescription": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "name": {
                    "type": "string"
                },
                "predicate": {
                    "type": "string",
                    "description": "A Cart predicate which can be used to more precisely select a shipping method for a cart\n"
                },
                "taxCategoryId": {
                    "type": "string",
                    "description": "ID of a [Tax Category](https://docs.commercetools.com/api/projects/taxCategories#taxcategory)\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ShippingMethod resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "One shipping method in a project can be default\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "User-specific unique identifier for the shipping method\n"
                    },
                    "localizedDescription": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "predicate": {
                        "type": "string",
                        "description": "A Cart predicate which can be used to more precisely select a shipping method for a cart\n"
                    },
                    "taxCategoryId": {
                        "type": "string",
                        "description": "ID of a [Tax Category](https://docs.commercetools.com/api/projects/taxCategories#taxcategory)\n"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "commercetools:index/shippingZone:ShippingZone": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "User-specific unique identifier for a zone. Must be unique across a project\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/commercetools:index/ShippingZoneLocation:ShippingZoneLocation"
                    },
                    "description": "[Location](https://docs.commercetools.com/api/projects/zones#location)\n"
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "name",
                "version"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "User-specific unique identifier for a zone. Must be unique across a project\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/commercetools:index/ShippingZoneLocation:ShippingZoneLocation"
                    },
                    "description": "[Location](https://docs.commercetools.com/api/projects/zones#location)\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ShippingZone resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "User-specific unique identifier for a zone. Must be unique across a project\n"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/commercetools:index/ShippingZoneLocation:ShippingZoneLocation"
                        },
                        "description": "[Location](https://docs.commercetools.com/api/projects/zones#location)\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "commercetools:index/shippingZoneRate:ShippingZoneRate": {
            "properties": {
                "freeAbove": {
                    "$ref": "#/types/commercetools:index/ShippingZoneRateFreeAbove:ShippingZoneRateFreeAbove",
                    "description": "The shipping is free if the sum of the (custom) line item prices reaches the freeAbove value\n"
                },
                "price": {
                    "$ref": "#/types/commercetools:index/ShippingZoneRatePrice:ShippingZoneRatePrice"
                },
                "shippingMethodId": {
                    "type": "string"
                },
                "shippingRatePriceTiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/commercetools:index/ShippingZoneRateShippingRatePriceTier:ShippingZoneRateShippingRatePriceTier"
                    },
                    "description": "A price tier is selected instead of the default price when a certain threshold or specific cart value is reached. If no\ntiered price is suitable for the cart, the base price of the shipping rate is used . See also [Shipping Rate Price Tier\nAPI Docs](https://docs.commercetools.com/api/projects/shippingMethods#shippingratepricetier)\n"
                },
                "shippingZoneId": {
                    "type": "string"
                }
            },
            "required": [
                "price",
                "shippingMethodId",
                "shippingZoneId"
            ],
            "inputProperties": {
                "freeAbove": {
                    "$ref": "#/types/commercetools:index/ShippingZoneRateFreeAbove:ShippingZoneRateFreeAbove",
                    "description": "The shipping is free if the sum of the (custom) line item prices reaches the freeAbove value\n"
                },
                "price": {
                    "$ref": "#/types/commercetools:index/ShippingZoneRatePrice:ShippingZoneRatePrice"
                },
                "shippingMethodId": {
                    "type": "string"
                },
                "shippingRatePriceTiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/commercetools:index/ShippingZoneRateShippingRatePriceTier:ShippingZoneRateShippingRatePriceTier"
                    },
                    "description": "A price tier is selected instead of the default price when a certain threshold or specific cart value is reached. If no\ntiered price is suitable for the cart, the base price of the shipping rate is used . See also [Shipping Rate Price Tier\nAPI Docs](https://docs.commercetools.com/api/projects/shippingMethods#shippingratepricetier)\n"
                },
                "shippingZoneId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "price",
                "shippingMethodId",
                "shippingZoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ShippingZoneRate resources.\n",
                "properties": {
                    "freeAbove": {
                        "$ref": "#/types/commercetools:index/ShippingZoneRateFreeAbove:ShippingZoneRateFreeAbove",
                        "description": "The shipping is free if the sum of the (custom) line item prices reaches the freeAbove value\n"
                    },
                    "price": {
                        "$ref": "#/types/commercetools:index/ShippingZoneRatePrice:ShippingZoneRatePrice"
                    },
                    "shippingMethodId": {
                        "type": "string"
                    },
                    "shippingRatePriceTiers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/commercetools:index/ShippingZoneRateShippingRatePriceTier:ShippingZoneRateShippingRatePriceTier"
                        },
                        "description": "A price tier is selected instead of the default price when a certain threshold or specific cart value is reached. If no\ntiered price is suitable for the cart, the base price of the shipping rate is used . See also [Shipping Rate Price Tier\nAPI Docs](https://docs.commercetools.com/api/projects/shippingMethods#shippingratepricetier)\n"
                    },
                    "shippingZoneId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "commercetools:index/state:State": {
            "properties": {
                "description": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "initial": {
                    "type": "boolean",
                    "description": "A state can be declared as an initial state for any state machine. When a workflow starts, this first state must be an\ninitial state\n"
                },
                "key": {
                    "type": "string",
                    "description": "A unique identifier for the state\n"
                },
                "name": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of [State Role](https://docs.commercetools.com/api/projects/states#staterole)\n"
                },
                "transitions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Transitions are a way to describe possible transformations of the current state to other states of the same type (for\nexample: Initial -\u003e Shipped). When performing a transitionState update action and transitions is set, the currently\nreferenced state must have a transition to the new state. If transitions is an empty list, it means the current state is\na final state and no further transitions are allowed. If transitions is not set, the validation is turned off. When\nperforming a transitionState update action, any other state of the same type can be transitioned to\n"
                },
                "type": {
                    "type": "string",
                    "description": "[StateType](https://docs.commercetools.com/api/projects/states#statetype)\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "key",
                "name",
                "type",
                "version"
            ],
            "inputProperties": {
                "description": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "initial": {
                    "type": "boolean",
                    "description": "A state can be declared as an initial state for any state machine. When a workflow starts, this first state must be an\ninitial state\n"
                },
                "key": {
                    "type": "string",
                    "description": "A unique identifier for the state\n"
                },
                "name": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of [State Role](https://docs.commercetools.com/api/projects/states#staterole)\n"
                },
                "transitions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Transitions are a way to describe possible transformations of the current state to other states of the same type (for\nexample: Initial -\u003e Shipped). When performing a transitionState update action and transitions is set, the currently\nreferenced state must have a transition to the new state. If transitions is an empty list, it means the current state is\na final state and no further transitions are allowed. If transitions is not set, the validation is turned off. When\nperforming a transitionState update action, any other state of the same type can be transitioned to\n"
                },
                "type": {
                    "type": "string",
                    "description": "[StateType](https://docs.commercetools.com/api/projects/states#statetype)\n"
                }
            },
            "requiredInputs": [
                "key",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering State resources.\n",
                "properties": {
                    "description": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                    },
                    "initial": {
                        "type": "boolean",
                        "description": "A state can be declared as an initial state for any state machine. When a workflow starts, this first state must be an\ninitial state\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "A unique identifier for the state\n"
                    },
                    "name": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of [State Role](https://docs.commercetools.com/api/projects/states#staterole)\n"
                    },
                    "transitions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Transitions are a way to describe possible transformations of the current state to other states of the same type (for\nexample: Initial -\u003e Shipped). When performing a transitionState update action and transitions is set, the currently\nreferenced state must have a transition to the new state. If transitions is an empty list, it means the current state is\na final state and no further transitions are allowed. If transitions is not set, the validation is turned off. When\nperforming a transitionState update action, any other state of the same type can be transitioned to\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "[StateType](https://docs.commercetools.com/api/projects/states#statetype)\n"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "commercetools:index/store:Store": {
            "properties": {
                "distributionChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of ResourceIdentifier to a Channel with ProductDistribution\n"
                },
                "key": {
                    "type": "string",
                    "description": "User-specific unique identifier for the store. The key is mandatory and immutable. It is used to reference the store\n"
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "[IETF Language Tag](https://en.wikipedia.org/wiki/IETF_language_tag)\n"
                },
                "name": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "supplyChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of ResourceIdentifier of Channels with InventorySupply\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "key",
                "name",
                "version"
            ],
            "inputProperties": {
                "distributionChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of ResourceIdentifier to a Channel with ProductDistribution\n"
                },
                "key": {
                    "type": "string",
                    "description": "User-specific unique identifier for the store. The key is mandatory and immutable. It is used to reference the store\n"
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "[IETF Language Tag](https://en.wikipedia.org/wiki/IETF_language_tag)\n"
                },
                "name": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "supplyChannels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of ResourceIdentifier of Channels with InventorySupply\n"
                }
            },
            "requiredInputs": [
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Store resources.\n",
                "properties": {
                    "distributionChannels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of ResourceIdentifier to a Channel with ProductDistribution\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "User-specific unique identifier for the store. The key is mandatory and immutable. It is used to reference the store\n"
                    },
                    "languages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "[IETF Language Tag](https://en.wikipedia.org/wiki/IETF_language_tag)\n"
                    },
                    "name": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                    },
                    "supplyChannels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of ResourceIdentifier of Channels with InventorySupply\n"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "commercetools:index/subscription:Subscription": {
            "properties": {
                "changes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/commercetools:index/SubscriptionChange:SubscriptionChange"
                    },
                    "description": "The change notifications subscribed to\n"
                },
                "destination": {
                    "$ref": "#/types/commercetools:index/SubscriptionDestination:SubscriptionDestination",
                    "description": "The Message Queue into which the notifications are to be sentSee also the [Destination API\nDocs](https://docs.commercetools.com/api/projects/subscriptions#destination)\n"
                },
                "format": {
                    "$ref": "#/types/commercetools:index/SubscriptionFormat:SubscriptionFormat",
                    "description": "The [format](https://docs.commercetools.com/api/projects/subscriptions#format) in which the payload is delivered\n"
                },
                "key": {
                    "type": "string",
                    "description": "User-specific unique identifier for the subscription\n"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/commercetools:index/SubscriptionMessage:SubscriptionMessage"
                    },
                    "description": "The messages subscribed to\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "version"
            ],
            "inputProperties": {
                "changes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/commercetools:index/SubscriptionChange:SubscriptionChange"
                    },
                    "description": "The change notifications subscribed to\n"
                },
                "destination": {
                    "$ref": "#/types/commercetools:index/SubscriptionDestination:SubscriptionDestination",
                    "description": "The Message Queue into which the notifications are to be sentSee also the [Destination API\nDocs](https://docs.commercetools.com/api/projects/subscriptions#destination)\n"
                },
                "format": {
                    "$ref": "#/types/commercetools:index/SubscriptionFormat:SubscriptionFormat",
                    "description": "The [format](https://docs.commercetools.com/api/projects/subscriptions#format) in which the payload is delivered\n"
                },
                "key": {
                    "type": "string",
                    "description": "User-specific unique identifier for the subscription\n"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/commercetools:index/SubscriptionMessage:SubscriptionMessage"
                    },
                    "description": "The messages subscribed to\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Subscription resources.\n",
                "properties": {
                    "changes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/commercetools:index/SubscriptionChange:SubscriptionChange"
                        },
                        "description": "The change notifications subscribed to\n"
                    },
                    "destination": {
                        "$ref": "#/types/commercetools:index/SubscriptionDestination:SubscriptionDestination",
                        "description": "The Message Queue into which the notifications are to be sentSee also the [Destination API\nDocs](https://docs.commercetools.com/api/projects/subscriptions#destination)\n"
                    },
                    "format": {
                        "$ref": "#/types/commercetools:index/SubscriptionFormat:SubscriptionFormat",
                        "description": "The [format](https://docs.commercetools.com/api/projects/subscriptions#format) in which the payload is delivered\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "User-specific unique identifier for the subscription\n"
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/commercetools:index/SubscriptionMessage:SubscriptionMessage"
                        },
                        "description": "The messages subscribed to\n"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "commercetools:index/taxCategory:TaxCategory": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "User-specific unique identifier for the category\n"
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "name",
                "version"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "description": "User-specific unique identifier for the category\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TaxCategory resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "description": "User-specific unique identifier for the category\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "commercetools:index/taxCategoryRate:TaxCategoryRate": {
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "Number Percentage in the range of [0..1]. The sum of the amounts of all subRates, if there are any\n"
                },
                "country": {
                    "type": "string",
                    "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\n"
                },
                "includedInPrice": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "description": "The state in the country\n"
                },
                "subRates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/commercetools:index/TaxCategoryRateSubRate:TaxCategoryRateSubRate"
                    },
                    "description": "For countries (for example the US) where the total tax is a combination of multiple taxes (for example state and local\ntaxes)\n"
                },
                "taxCategoryId": {
                    "type": "string"
                }
            },
            "required": [
                "country",
                "includedInPrice",
                "name",
                "taxCategoryId"
            ],
            "inputProperties": {
                "amount": {
                    "type": "number",
                    "description": "Number Percentage in the range of [0..1]. The sum of the amounts of all subRates, if there are any\n"
                },
                "country": {
                    "type": "string",
                    "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\n"
                },
                "includedInPrice": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "description": "The state in the country\n"
                },
                "subRates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/commercetools:index/TaxCategoryRateSubRate:TaxCategoryRateSubRate"
                    },
                    "description": "For countries (for example the US) where the total tax is a combination of multiple taxes (for example state and local\ntaxes)\n"
                },
                "taxCategoryId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "country",
                "includedInPrice",
                "taxCategoryId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TaxCategoryRate resources.\n",
                "properties": {
                    "amount": {
                        "type": "number",
                        "description": "Number Percentage in the range of [0..1]. The sum of the amounts of all subRates, if there are any\n"
                    },
                    "country": {
                        "type": "string",
                        "description": "A two-digit country code as per [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\n"
                    },
                    "includedInPrice": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string",
                        "description": "The state in the country\n"
                    },
                    "subRates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/commercetools:index/TaxCategoryRateSubRate:TaxCategoryRateSubRate"
                        },
                        "description": "For countries (for example the US) where the total tax is a combination of multiple taxes (for example state and local\ntaxes)\n"
                    },
                    "taxCategoryId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "commercetools:index/type:Type": {
            "properties": {
                "description": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/commercetools:index/TypeField:TypeField"
                    },
                    "description": "[Field definition](https://docs.commercetools.com/api/projects/types#fielddefinition)\n"
                },
                "key": {
                    "type": "string",
                    "description": "Identifier for the type (max. 256 characters)\n"
                },
                "name": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "resourceTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines for which [resources](https://docs.commercetools.com/api/projects/custom-fields#customizable-resources) the type\nis valid\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "key",
                "name",
                "resourceTypeIds",
                "version"
            ],
            "inputProperties": {
                "description": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/commercetools:index/TypeField:TypeField"
                    },
                    "description": "[Field definition](https://docs.commercetools.com/api/projects/types#fielddefinition)\n"
                },
                "key": {
                    "type": "string",
                    "description": "Identifier for the type (max. 256 characters)\n"
                },
                "name": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                },
                "resourceTypeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines for which [resources](https://docs.commercetools.com/api/projects/custom-fields#customizable-resources) the type\nis valid\n"
                }
            },
            "requiredInputs": [
                "key",
                "resourceTypeIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Type resources.\n",
                "properties": {
                    "description": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/commercetools:index/TypeField:TypeField"
                        },
                        "description": "[Field definition](https://docs.commercetools.com/api/projects/types#fielddefinition)\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "Identifier for the type (max. 256 characters)\n"
                    },
                    "name": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "[LocalizedString](https://docs.commercetools.com/api/types#localizedstring)\n"
                    },
                    "resourceTypeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines for which [resources](https://docs.commercetools.com/api/projects/custom-fields#customizable-resources) the type\nis valid\n"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-commercetools/sdk/go/commercetools"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing commercetools cloud resources.",
            "packageName": "@unplatform/commercetools",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-commercetools)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-commercetools` repo](https://github.com/pulumi/pulumi-commercetools/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-providers/terraform-provider-commercetools` repo](https://github.com/terraform-providers/terraform-provider-commercetools/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-commercetools)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-commercetools` repo](https://github.com/pulumi/pulumi-commercetools/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-providers/terraform-provider-commercetools` repo](https://github.com/terraform-providers/terraform-provider-commercetools/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}